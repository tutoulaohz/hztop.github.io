<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>两数相加</title>
      <link href="/2022/04/03/liang-shu-xiang-jia-suan-fa-ti/"/>
      <url>/2022/04/03/liang-shu-xiang-jia-suan-fa-ti/</url>
      
        <content type="html"><![CDATA[<h3 id="1-题目描述"><a href="#1-题目描述" class="headerlink" title="1.题目描述"></a>1.题目描述</h3><blockquote><p>题目描述：两个<strong>非空</strong>的链表，表示两个非负的整数。它们每位数字都是按照<strong>逆序</strong>的方式存储的，并且每个节点只能存储<strong>一位</strong>数字。请你将两个数相加，并以相同形式返回一个表示和的链表。你可以假设除了数字 0 之外，这两个数都不会以0开头。</p></blockquote><h3 id="2-题解示例"><a href="#2-题解示例" class="headerlink" title="2.题解示例"></a>2.题解示例</h3><blockquote><p>示例1:<br>    输入：l1 = [2,4,3], l2 = [5,6,4]<br>    输出：[7,0,8]<br>    解释：342 + 465 = 807.<br>  示例2:<br>    输入：l1 = [9,9,9,9,9,9,9], l2 = [9,9,9,9]<br>    输出：[8,9,9,9,0,0,0,1]<br>  示例3:<br>    输入：l1 = [0], l2 = [0]<br>    输出：[0]</p></blockquote><hr><p>解题代码如下:</p><pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript"><span class="token keyword">const</span> l1 <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">,</span>    l2 <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">5</span><span class="token punctuation">,</span> <span class="token number">6</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">]</span><span class="token keyword">var</span> <span class="token function-variable function">addTwoNumbers</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">l1<span class="token punctuation">,</span> l2</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>     <span class="token comment">//将运算结果转为String类型，再利用扩展运算符(...)将算结果拆分填入result数组</span>     <span class="token comment">//最终 result = ['8','0','7']</span>    <span class="token keyword">let</span> result <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token operator">...</span><span class="token punctuation">[</span><span class="token function">addend_1</span><span class="token punctuation">(</span>l1<span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token function">addend_2</span><span class="token punctuation">(</span>l2<span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token punctuation">;</span>         <span class="token keyword">let</span> last_result <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>    <span class="token keyword">for</span> <span class="token punctuation">(</span>item <span class="token keyword">of</span> result<span class="token punctuation">)</span> <span class="token punctuation">{</span>        last_result<span class="token punctuation">.</span><span class="token function">unshift</span><span class="token punctuation">(</span><span class="token function">parseInt</span><span class="token punctuation">(</span>item<span class="token punctuation">)</span><span class="token punctuation">)</span>  <span class="token comment">//顺序调换并转换数据类型之后填入新数组</span>    <span class="token punctuation">}</span>    <span class="token keyword">return</span> last_result<span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token punctuation">;</span><span class="token keyword">var</span> <span class="token function-variable function">addend_1</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">l1</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token keyword">let</span> a <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>    <span class="token keyword">for</span> <span class="token punctuation">(</span>i <span class="token keyword">in</span> l1<span class="token punctuation">)</span> <span class="token punctuation">{</span>        a <span class="token operator">+=</span> l1<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">*</span> <span class="token punctuation">(</span>Math<span class="token punctuation">.</span><span class="token function">pow</span><span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">,</span> i<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment">//位数拆分</span>    <span class="token punctuation">}</span>    <span class="token keyword">return</span> a<span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token keyword">var</span> <span class="token function-variable function">addend_2</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">l2</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token keyword">let</span> b <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>    <span class="token keyword">for</span> <span class="token punctuation">(</span>i <span class="token keyword">in</span> l2<span class="token punctuation">)</span> <span class="token punctuation">{</span>        b <span class="token operator">+=</span> l2<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">*</span> <span class="token punctuation">(</span>Math<span class="token punctuation">.</span><span class="token function">pow</span><span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">,</span> i<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">return</span> b<span class="token punctuation">;</span><span class="token punctuation">}</span>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token function">addTwoNumbers</span><span class="token punctuation">(</span>l1<span class="token punctuation">,</span> l2<span class="token punctuation">)</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> JavaScript </category>
          
      </categories>
      
      
        <tags>
            
            <tag> JavaScript </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>节流和防抖机制</title>
      <link href="/2022/03/22/jie-liu-he-fang-dou-ji-zhi/"/>
      <url>/2022/03/22/jie-liu-he-fang-dou-ji-zhi/</url>
      
        <content type="html"><![CDATA[<h3 id="1-应用需求"><a href="#1-应用需求" class="headerlink" title="1.应用需求"></a>1.应用需求</h3><blockquote><p>在前端开发的过程中，我们经常会需要绑定一些持续触发的事件，如 click、resize、scroll、mousemove 等，或者用户会高频次触发某个事件，但我们并不希望在事件持续触发的过程中那么频繁地去执行函数。所以此时就会用到防抖和节流。要实现这两个功能需要我们先了解闭包原理</p></blockquote><hr><h3 id="2-闭包原理"><a href="#2-闭包原理" class="headerlink" title="2.闭包原理"></a>2.闭包原理</h3><blockquote><p>1.”闭包”是指:一个函数A返回一个内敛的函数B，即使A函数执行完毕，函数B也可以访问函数A里面的变量，这就是一个简单的”闭包”。简单来理解就是<code>连接函数内部和外部的桥梁</code><br>2.需要注意,过度使用闭包会导致<code>内存占用过多</code>和<code>内存泄漏</code>的问题<br>下面我们通过代码理解</p></blockquote><pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript"> window<span class="token punctuation">.</span><span class="token function-variable function">onload</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>  <span class="token comment">//元素渲染结束之后再执行js代码</span>    <span class="token keyword">function</span> <span class="token function">fun1</span><span class="token punctuation">(</span><span class="token parameter">name</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>  <span class="token comment">//函数A</span>        <span class="token keyword">return</span> <span class="token keyword">function</span> <span class="token function">fun2</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>   <span class="token comment">//函数A里面的函数B</span>                console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>name<span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token punctuation">}</span>        <span class="token punctuation">}</span>    <span class="token punctuation">}</span>    <span class="token keyword">var</span> test <span class="token operator">=</span> <span class="token function">fun1</span><span class="token punctuation">(</span><span class="token string">"Tom"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token function">test</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token comment">//释放全局变量---&gt;  test = null;</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><ul><li>1.在fun1()函数内部创建的fun2()函数是不会被回收的，因为他被全局变量test引用了，随时处在<code>被调用</code>的状态。我们可以通过将它赋值为<code>null</code>将他从内存中释放掉</li><li>2.由于闭包会携带它所包含的函数的作用域，因此相对其他函数会占用更多内存</li></ul><hr><h3 id="3-节流机制"><a href="#3-节流机制" class="headerlink" title="3.节流机制"></a>3.节流机制</h3><blockquote><ol><li>定义：规定在一个<code>单位时间内</code>只能触发一次函数。如果这个单位时间内触发多次函数，也只会执行一次函数。简单理解的话，”节流”就是增加事件的触发频率,使事件不能频繁触发。</li><li>实现原理：利用<code>闭包</code>形成作用域，使得定时器不会被下一次点击重复或清空。最终实现<strong>每次点击都延迟执行。狂点时只有停下后才会执行</strong>的效果。</li><li>根据我们的业务需求可以有两种节流。一种是<code>首次立即触发执行</code>,这种对用户比较友好;另一种是每一次点击都延迟执行事件，即<code>首次不触发</code></li></ol></blockquote><ul><li>首次不触发<pre class="line-numbers language-html" data-language="html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>button</span> <span class="token special-attr"><span class="token attr-name">style</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span><span class="token value css language-css"><span class="token property">outline</span><span class="token punctuation">:</span> none<span class="token punctuation">;</span></span><span class="token punctuation">"</span></span></span><span class="token punctuation">&gt;</span></span>点击<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>button</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">&gt;</span></span><span class="token script"><span class="token language-javascript">        window<span class="token punctuation">.</span><span class="token function-variable function">onload</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>            <span class="token comment">//DOM操作</span>            <span class="token keyword">let</span> btn <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">querySelector</span><span class="token punctuation">(</span><span class="token string">'button'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token keyword">let</span> inp <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">getElementById</span><span class="token punctuation">(</span><span class="token string">'debounce'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token comment">//首次不触发</span>            <span class="token keyword">function</span> <span class="token function">throttle</span><span class="token punctuation">(</span><span class="token parameter">fn<span class="token punctuation">,</span> delay</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>                <span class="token keyword">let</span> timer<span class="token punctuation">;</span>                <span class="token keyword">return</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>                    <span class="token keyword">if</span> <span class="token punctuation">(</span>timer<span class="token punctuation">)</span> <span class="token punctuation">{</span>                        <span class="token function">clearTimeout</span><span class="token punctuation">(</span>timer<span class="token punctuation">)</span><span class="token punctuation">;</span>                    <span class="token punctuation">}</span>                    timer <span class="token operator">=</span> <span class="token function">setTimeout</span><span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>                        <span class="token function">fn</span><span class="token punctuation">.</span><span class="token function">apply</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">,</span> arguments<span class="token punctuation">)</span><span class="token punctuation">;</span>   <span class="token comment">//重定向this</span>                        timer <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span>                    <span class="token punctuation">}</span><span class="token punctuation">,</span> delay<span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token punctuation">}</span>            <span class="token punctuation">}</span>            <span class="token keyword">let</span> <span class="token punctuation">{</span> log <span class="token punctuation">}</span> <span class="token operator">=</span> console<span class="token punctuation">;</span>            <span class="token keyword">function</span> <span class="token function">handleSend</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>                <span class="token function">log</span><span class="token punctuation">(</span><span class="token string">'发送成功'</span><span class="token punctuation">,</span> <span class="token keyword">new</span> <span class="token class-name">Date</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toLocaleTimeString</span><span class="token punctuation">(</span><span class="token string">'zh'</span><span class="token punctuation">,</span> <span class="token punctuation">{</span> hour12<span class="token operator">:</span> <span class="token boolean">false</span> <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token punctuation">}</span>            btn<span class="token punctuation">.</span><span class="token function">addEventListener</span><span class="token punctuation">(</span><span class="token string">'click'</span><span class="token punctuation">,</span> <span class="token function">throttle</span><span class="token punctuation">(</span>handleSend<span class="token punctuation">,</span> <span class="token number">800</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>    </span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">&gt;</span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li></ul><hr><ul><li>首次立即触发<pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript"><span class="token keyword">function</span> <span class="token function">throttle</span><span class="token punctuation">(</span><span class="token parameter">fn<span class="token punctuation">,</span> delay</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token keyword">let</span> timer <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span>    <span class="token keyword">return</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>        <span class="token keyword">var</span> firstClick <span class="token operator">=</span> <span class="token operator">!</span>timer<span class="token punctuation">;</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span>firstClick<span class="token punctuation">)</span> <span class="token punctuation">{</span>            <span class="token function">fn</span><span class="token punctuation">.</span><span class="token function">apply</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">,</span> arguments<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//重定向this</span>        <span class="token punctuation">}</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span>timer<span class="token punctuation">)</span> <span class="token punctuation">{</span>            <span class="token function">clearTimeout</span><span class="token punctuation">(</span>timer<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>               timer <span class="token operator">=</span> <span class="token function">setTimeout</span><span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>            timer <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span><span class="token punctuation">,</span> delay<span class="token punctuation">)</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token keyword">let</span> <span class="token punctuation">{</span> log <span class="token punctuation">}</span> <span class="token operator">=</span> console<span class="token punctuation">;</span><span class="token keyword">function</span> <span class="token function">handleSend</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token function">log</span><span class="token punctuation">(</span><span class="token string">'发送成功'</span><span class="token punctuation">,</span> <span class="token keyword">new</span> <span class="token class-name">Date</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toLocaleTimeString</span><span class="token punctuation">(</span><span class="token string">'zh'</span><span class="token punctuation">,</span> <span class="token punctuation">{</span> hour12<span class="token operator">:</span> <span class="token boolean">false</span> <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span>btn<span class="token punctuation">.</span><span class="token function">addEventListener</span><span class="token punctuation">(</span><span class="token string">'click'</span><span class="token punctuation">,</span> <span class="token function">throttle</span><span class="token punctuation">(</span>handleSend<span class="token punctuation">,</span> <span class="token number">800</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li></ul><hr><h3 id="4-防抖机制"><a href="#4-防抖机制" class="headerlink" title="4.防抖机制"></a>4.防抖机制</h3><blockquote><ol><li>定义：在事件被触发n秒后再执行回调，如果再这n秒内又被触发，则重新计时</li><li>实现原理：利用<code>闭包</code>形成作用域，使得定时器不会被下一次点击重复或清空。最终实现<strong>每次点击都延迟执行;狂点时只有停下后才会执行</strong>的效果。</li></ol></blockquote><pre class="line-numbers language-html" data-language="html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">&gt;</span></span>    搜索框:<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>text<span class="token punctuation">"</span></span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>debounce<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">&gt;</span></span><span class="token script"><span class="token language-javascript">        <span class="token comment">//首次不触发</span>        window<span class="token punctuation">.</span><span class="token function-variable function">onload</span> <span class="token operator">=</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>            <span class="token keyword">function</span> <span class="token function">debounce</span><span class="token punctuation">(</span><span class="token parameter">fn<span class="token punctuation">,</span> delay</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>                <span class="token keyword">let</span> timer<span class="token punctuation">;</span>                <span class="token keyword">return</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>                    timer <span class="token operator">&amp;&amp;</span> <span class="token function">clearInterval</span><span class="token punctuation">(</span>timer<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//如果定时器存在，清除定时器</span>                    timer <span class="token operator">=</span> <span class="token function">setTimeout</span><span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>  <span class="token comment">//定时器的回调函数中执行外部函数fn</span>                        <span class="token function">fn</span><span class="token punctuation">.</span><span class="token function">call</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment">//重定向this</span>                    <span class="token punctuation">}</span><span class="token punctuation">,</span> delay<span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token punctuation">}</span>            <span class="token punctuation">}</span>            <span class="token comment">//首次触发</span>            <span class="token comment">// function debounce(fn, delay) {</span>            <span class="token comment">//     let timer = null;</span>            <span class="token comment">//     return function (){</span>            <span class="token comment">//         var firstClick = !timer;</span>            <span class="token comment">//         if (firstClick) {</span>            <span class="token comment">//             fn.call(this); //重定向this</span>            <span class="token comment">//         }</span>                       <span class="token comment">//定时器存在则清除定时器</span>            <span class="token comment">//         if (timer) {</span>            <span class="token comment">//             clearTimeout(timer);</span>            <span class="token comment">//         }</span>            <span class="token comment">//         timer = setTimeout(function () {</span>            <span class="token comment">//             timer = null;</span>            <span class="token comment">//         }, delay)</span>            <span class="token comment">//     }       </span>            <span class="token comment">// }</span>            <span class="token keyword">let</span> <span class="token punctuation">{</span> log <span class="token punctuation">}</span> <span class="token operator">=</span> console<span class="token punctuation">;</span>            <span class="token keyword">function</span> <span class="token function">handleSearch</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>                <span class="token function">log</span><span class="token punctuation">(</span><span class="token string">'搜索'</span><span class="token punctuation">,</span> <span class="token keyword">this</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token punctuation">}</span>            inp<span class="token punctuation">.</span><span class="token function">addEventListener</span><span class="token punctuation">(</span><span class="token string">'keyup'</span><span class="token punctuation">,</span> <span class="token function">debounce</span><span class="token punctuation">(</span>handleSearch<span class="token punctuation">,</span> <span class="token number">1000</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>    </span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">&gt;</span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><hr><blockquote><p>最后来一波总结,实现防抖和节流的基本思路：</p><ul><li>1.触发事件</li><li>2.setInterval() | setTimeout()  设置定时器</li><li>3.clearInterval() | clearTimeout() 清除定时器</li><li>4.重定向this 使用call(this)或者apply(this,arguments)</li><li>“防抖”就是通过setTimeout 的方式，在一定的时间间隔内，将多次触发变成一次触发 。</li><li>“节流”就是增加事件的触发频率。</li><li>防抖与节流最大的区别就是，无论事件触发多么频繁，都可以保证在规定时间内可以执行一次执行函数</li></ul></blockquote>]]></content>
      
      
      <categories>
          
          <category> JavaScript </category>
          
      </categories>
      
      
        <tags>
            
            <tag> JavaScript </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>JS数组方法总结</title>
      <link href="/2022/03/21/js-shu-zu-zong-jie/"/>
      <url>/2022/03/21/js-shu-zu-zong-jie/</url>
      
        <content type="html"><![CDATA[<h3 id="1-在数组中插入元素"><a href="#1-在数组中插入元素" class="headerlink" title="1.在数组中插入元素"></a>1.在数组中插入元素</h3><ul><li><strong>push()</strong><blockquote><p>push()函数在<strong>数组的尾部</strong>插入元素，返回值是<strong>数组长度</strong></p></blockquote><pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript"><span class="token keyword">let</span> arr <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token number">4</span><span class="token punctuation">,</span><span class="token number">5</span><span class="token punctuation">]</span><span class="token punctuation">;</span><span class="token keyword">let</span> result <span class="token operator">=</span> arr<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span><span class="token number">7</span><span class="token punctuation">)</span><span class="token punctuation">;</span>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>arr<span class="token punctuation">,</span>result<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//输出结果：[1,2,3,4,5,7],6</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre></li><li><strong>unshift()</strong><blockquote><p>unshift()函数在<strong>数组的头部</strong>插入元素，返回值是<strong>数组的长度</strong></p></blockquote><pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript"><span class="token keyword">let</span> arr <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token number">4</span><span class="token punctuation">,</span><span class="token number">5</span><span class="token punctuation">]</span><span class="token punctuation">;</span><span class="token keyword">let</span> result <span class="token operator">=</span> arr<span class="token punctuation">.</span><span class="token function">unshift</span><span class="token punctuation">(</span><span class="token number">7</span><span class="token punctuation">)</span><span class="token punctuation">;</span>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>arr<span class="token punctuation">,</span>result<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//输出结果：[7,1,2,3,4,5],6</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre></li></ul><hr><h3 id="2-从数组移出元素"><a href="#2-从数组移出元素" class="headerlink" title="2.从数组移出元素"></a>2.从数组移出元素</h3><ul><li><strong>pop()</strong><blockquote><p>pop()函数移出<strong>数组的最后一个元素</strong>，返回值是被<em>移出的元素</em></p></blockquote><pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript"><span class="token keyword">let</span> arr <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token number">4</span><span class="token punctuation">,</span><span class="token number">5</span><span class="token punctuation">]</span><span class="token punctuation">;</span><span class="token keyword">let</span> result <span class="token operator">=</span> arr<span class="token punctuation">.</span><span class="token function">pop</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>arr<span class="token punctuation">,</span>result<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//输出结果：[1,2,3,4],5</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre></li><li><strong>shift()</strong><blockquote><p>shift()函数移出<strong>数组的第一个元素</strong>,返回值是被<em>移出的元素</em></p></blockquote><pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript"><span class="token keyword">let</span> arr <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token number">4</span><span class="token punctuation">,</span><span class="token number">5</span><span class="token punctuation">]</span><span class="token punctuation">;</span><span class="token keyword">let</span> result <span class="token operator">=</span> arr<span class="token punctuation">.</span><span class="token function">shift</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>arr<span class="token punctuation">,</span>result<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//输出结果：[2,3,4,5],1</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre></li></ul><hr><h3 id="3-截取数组操作"><a href="#3-截取数组操作" class="headerlink" title="3.截取数组操作"></a>3.截取数组操作</h3><ul><li><p><strong>slice()</strong></p><blockquote><p>slice()函数只有一个参数的时候，作用是从参数所在的索引位置一直截取到数组末尾</p></blockquote><pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript"><span class="token keyword">let</span> arr <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token number">4</span><span class="token punctuation">,</span><span class="token number">5</span><span class="token punctuation">]</span><span class="token punctuation">;</span><span class="token keyword">let</span> result <span class="token operator">=</span> arr<span class="token punctuation">.</span><span class="token function">slice</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">;</span>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>arr<span class="token punctuation">,</span>result<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//输出结果：[1,2,3,4,5],[3,4,5]</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><blockquote><p>而当有两个参数时,参数就代表了起始位置和结束位置：”slice(start,end)”,但截取到的元素不包含最后一个</p></blockquote><pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript"><span class="token keyword">let</span> arr <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token number">4</span><span class="token punctuation">,</span><span class="token number">5</span><span class="token punctuation">]</span><span class="token punctuation">;</span><span class="token keyword">let</span> result <span class="token operator">=</span> arr<span class="token punctuation">.</span><span class="token function">slice</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">4</span><span class="token punctuation">)</span><span class="token punctuation">;</span>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>arr<span class="token punctuation">,</span>result<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//输出结果：[1,2,3,4,5],[3,4]</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><p>最后值得注意的是slice()函数是在不改变元素组的情况下做的截取操作。</p></li><li><p><strong>splice(start,deleteCount,item)</strong></p><blockquote><p>只有一个参数的情况:参数以外的范围都被移除，返回的是参数所在的索引位置到最后的结果。</p></blockquote><pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript"><span class="token keyword">let</span> arr <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token number">4</span><span class="token punctuation">,</span><span class="token number">5</span><span class="token punctuation">]</span><span class="token keyword">let</span> result <span class="token operator">=</span> arr<span class="token punctuation">.</span><span class="token function">splice</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>arr<span class="token punctuation">,</span>result<span class="token punctuation">)</span><span class="token comment">//输出结果：[1,2],[3,4,5]</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><blockquote><p>当有两个参数时,截取的是参数区间内的结果(参数即数组索引下标)</p></blockquote><pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript"><span class="token keyword">let</span> arr <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token number">4</span><span class="token punctuation">,</span><span class="token number">5</span><span class="token punctuation">]</span><span class="token keyword">let</span> result <span class="token operator">=</span> arr<span class="token punctuation">.</span><span class="token function">splice</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">)</span>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>arr<span class="token punctuation">,</span>result<span class="token punctuation">)</span><span class="token comment">//输出结果：[1,5],[2,3,4]</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><blockquote><p>多个参数时,splice()函数实现的是替换功能</p></blockquote><pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript"><span class="token keyword">let</span> arr <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token number">4</span><span class="token punctuation">,</span><span class="token number">5</span><span class="token punctuation">]</span><span class="token keyword">let</span> result <span class="token operator">=</span> arr<span class="token punctuation">.</span><span class="token function">splice</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">7</span><span class="token punctuation">,</span><span class="token number">8</span><span class="token punctuation">,</span><span class="token number">9</span><span class="token punctuation">)</span> <span class="token comment">//参数含义: **从下标为1开始删除1位，删除位置用"7,8,9"替代**</span>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>arr<span class="token punctuation">,</span>result<span class="token punctuation">)</span><span class="token comment">//输出结果：[1,7,8,9,3,4,5],[2]</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>slice()函数和splice()函数的功能都是根据所给参数截取数组,但前者不会改变数组本身,后者会重新构造数组</p></li></ul><hr><h3 id="4-数组连接操作"><a href="#4-数组连接操作" class="headerlink" title="4.数组连接操作"></a>4.数组连接操作</h3><ul><li><strong>join()</strong><blockquote><p>join()函数在<strong>不改变原数组</strong>的情况下，将参数作为数组连接的字符串,返回的结果为连接的字符串(数据类型自然也是字符串)</p></blockquote><pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript"><span class="token keyword">let</span> arr <span class="token operator">=</span>  <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">]</span><span class="token keyword">let</span> result <span class="token operator">=</span> arr<span class="token punctuation">.</span><span class="token function">join</span><span class="token punctuation">(</span><span class="token string">"-"</span><span class="token punctuation">)</span> <span class="token comment">//表示使用-来链接</span>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>arr<span class="token punctuation">,</span>result<span class="token punctuation">)</span> <span class="token comment">//输出结果 [1,2,3],"1-2-3" </span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><blockquote><p>concat()函数在<strong>不改变原数组</strong>的情况下将两个数组进行连接</p></blockquote><pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript"><span class="token keyword">let</span> arr1 <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">]</span><span class="token keyword">let</span> arr2 <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">4</span><span class="token punctuation">,</span><span class="token number">5</span><span class="token punctuation">,</span><span class="token number">6</span><span class="token punctuation">]</span><span class="token keyword">let</span> result <span class="token operator">=</span> arr1<span class="token punctuation">.</span><span class="token function">concat</span><span class="token punctuation">(</span>arr2<span class="token punctuation">)</span><span class="token punctuation">;</span>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>arr1<span class="token punctuation">,</span>arr2<span class="token punctuation">,</span>result<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//结果：[1,2,3],[4,5,6],[1,2,3,4,5,6]</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre></li></ul><hr><h3 id="5-数组元素的位置方法"><a href="#5-数组元素的位置方法" class="headerlink" title="5.数组元素的位置方法"></a>5.数组元素的位置方法</h3><ul><li><strong>indexOf()</strong><blockquote><p>indexOf()的第一个参数是要<strong>查找的项</strong>,第二个参数是<strong>查找起点</strong>,即从哪个索引开始查找。返回值是<strong>查找项的索引下标</strong></p></blockquote><pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript"><span class="token keyword">let</span> arr <span class="token operator">=</span>  <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">5</span><span class="token punctuation">,</span><span class="token number">4</span><span class="token punctuation">,</span><span class="token number">5</span><span class="token punctuation">,</span><span class="token number">6</span><span class="token punctuation">]</span><span class="token keyword">let</span> result <span class="token operator">=</span> arr<span class="token punctuation">.</span><span class="token function">indexOf</span><span class="token punctuation">(</span><span class="token number">5</span><span class="token punctuation">)</span> <span class="token comment">//查找5的索引值</span><span class="token keyword">let</span> result2 <span class="token operator">=</span> arr<span class="token punctuation">.</span><span class="token function">indexOf</span><span class="token punctuation">(</span><span class="token number">5</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">)</span> <span class="token comment">//从索引为2的位置开始找</span><span class="token keyword">let</span> result3 <span class="token operator">=</span> arr<span class="token punctuation">.</span><span class="token function">indexOf</span><span class="token punctuation">(</span><span class="token number">5</span><span class="token punctuation">,</span><span class="token number">4</span><span class="token punctuation">)</span> <span class="token comment">//从索引为3的位置开始找</span>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>result<span class="token punctuation">,</span>result2<span class="token punctuation">,</span>result3<span class="token punctuation">)</span> <span class="token comment">//输出结果：2, 2, 4 </span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li><li><strong>lastindexOf()</strong><blockquote><p>lastindexOf()的第一个参数是要<strong>查找的项</strong>,第二个参数是<strong>查找起点</strong>,但lastindexOf()是往索引前面查找而不是往后。返回值也是<strong>查找项的索引下标</strong></p></blockquote><pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript"><span class="token keyword">let</span> arr <span class="token operator">=</span>  <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">5</span><span class="token punctuation">,</span><span class="token number">4</span><span class="token punctuation">,</span><span class="token number">5</span><span class="token punctuation">,</span><span class="token number">6</span><span class="token punctuation">]</span><span class="token keyword">let</span> result <span class="token operator">=</span> arr<span class="token punctuation">.</span><span class="token function">lastIndexOf</span><span class="token punctuation">(</span><span class="token number">5</span><span class="token punctuation">)</span> <span class="token comment">//查找5的索引值</span><span class="token keyword">let</span> result2 <span class="token operator">=</span> arr<span class="token punctuation">.</span><span class="token function">lastIndexOf</span><span class="token punctuation">(</span><span class="token number">5</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">)</span> <span class="token comment">//从索引为2的位置开始往前找</span>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>result<span class="token punctuation">,</span>result2<span class="token punctuation">)</span> <span class="token comment">//输出结果: 4,2 </span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre></li></ul><hr><h3 id="6-数组排序方法"><a href="#6-数组排序方法" class="headerlink" title="6.数组排序方法"></a>6.数组排序方法</h3><ul><li><strong>sort()</strong><pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript"><span class="token keyword">let</span> arr <span class="token operator">=</span>  <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">5</span><span class="token punctuation">,</span><span class="token number">4</span><span class="token punctuation">,</span><span class="token number">5</span><span class="token punctuation">,</span><span class="token number">6</span><span class="token punctuation">]</span>arr<span class="token punctuation">.</span><span class="token function">sort</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">a<span class="token punctuation">,</span>b</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> a <span class="token operator">-</span> b<span class="token punctuation">)</span>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>arr<span class="token punctuation">)</span> <span class="token comment">// 结果1：[1, 2, 4, 5, 5, 6]</span>arr<span class="token punctuation">.</span><span class="token function">sort</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">a<span class="token punctuation">,</span>b</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> b <span class="token operator">-</span> a<span class="token punctuation">)</span>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>arr<span class="token punctuation">)</span><span class="token comment">// 结果2：[6, 5, 5, 4, 2, 1] </span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li></ul><hr><h3 id="7-数组迭代方法"><a href="#7-数组迭代方法" class="headerlink" title="7.数组迭代方法"></a>7.数组迭代方法</h3><ul><li><strong>every()</strong><blockquote><p>功能描述:数组中所有元素都满足条件则返回true，否则返回false</p></blockquote><pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript"><span class="token keyword">let</span> arr <span class="token operator">=</span>  <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">5</span><span class="token punctuation">,</span><span class="token number">4</span><span class="token punctuation">,</span><span class="token number">5</span><span class="token punctuation">,</span><span class="token number">6</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">]</span><span class="token keyword">let</span> result <span class="token operator">=</span> arr<span class="token punctuation">.</span><span class="token function">every</span><span class="token punctuation">(</span><span class="token parameter">item</span> <span class="token operator">=&gt;</span> item <span class="token operator">&lt;</span> <span class="token number">7</span><span class="token punctuation">)</span> <span class="token comment">//判断是否其中所有数都小于7</span>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>result<span class="token punctuation">)</span><span class="token comment">//输出结果：true </span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre></li><li><strong>some()</strong><blockquote><p>只要数组中有一个元素满足条件就返回true，否则返回false</p></blockquote><pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript"><span class="token keyword">let</span> arr <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token number">4</span><span class="token punctuation">,</span><span class="token number">5</span><span class="token punctuation">,</span><span class="token number">6</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">]</span><span class="token keyword">let</span> result <span class="token operator">=</span> arr<span class="token punctuation">.</span><span class="token function">some</span><span class="token punctuation">(</span> <span class="token parameter">item</span> <span class="token operator">=&gt;</span> item <span class="token operator">===</span> <span class="token number">5</span><span class="token punctuation">)</span> <span class="token comment">//判断是否有等于5的元素</span><span class="token keyword">let</span> result2 <span class="token operator">=</span> arr<span class="token punctuation">.</span><span class="token function">some</span><span class="token punctuation">(</span> <span class="token parameter">item</span> <span class="token operator">=&gt;</span> item <span class="token operator">&gt;</span> <span class="token number">6</span><span class="token punctuation">)</span> <span class="token comment">//判断始有有元素大于6</span>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>result<span class="token punctuation">,</span>result2<span class="token punctuation">)</span><span class="token comment">//结果：true,false </span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre></li><li><strong>filter()</strong><blockquote><p>功能：将数组中不满足条件的元素全部过滤掉，返回新<strong>数组</strong>,新数组中的元素是满足条件的项</p></blockquote><pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript"><span class="token keyword">let</span> arr <span class="token operator">=</span>  <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">5</span><span class="token punctuation">,</span><span class="token number">4</span><span class="token punctuation">,</span><span class="token number">5</span><span class="token punctuation">,</span><span class="token number">6</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">]</span><span class="token keyword">let</span> result <span class="token operator">=</span> arr<span class="token punctuation">.</span><span class="token function">filter</span><span class="token punctuation">(</span><span class="token parameter">item</span> <span class="token operator">=&gt;</span> item <span class="token operator">&gt;</span> <span class="token number">3</span><span class="token punctuation">)</span> <span class="token comment">//获取其中所有大于3的项</span>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>result<span class="token punctuation">)</span><span class="token comment">//结果：[5,4,5,6]</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre></li><li><strong>map()</strong><blockquote><p>map()函数返回数组，其中每一个元素对应return中改变的值，常用于数组改造</p></blockquote><pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript"><span class="token keyword">let</span> arr <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token number">4</span><span class="token punctuation">,</span><span class="token number">4</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">6</span><span class="token punctuation">]</span><span class="token keyword">let</span> result <span class="token operator">=</span> arr<span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span> <span class="token parameter">item</span> <span class="token operator">=&gt;</span> item <span class="token operator">+</span> <span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//数组的每一项都加3</span>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>result<span class="token punctuation">)</span><span class="token comment">//输出结果：[4,5,6,7,7,6,5,9]</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre></li></ul><hr><h3 id="8-数组归并操作"><a href="#8-数组归并操作" class="headerlink" title="8.数组归并操作"></a>8.数组归并操作</h3><ul><li><strong>reduce()</strong><blockquote><p>给 reduce() 函数接收 4 个参数：前一个值、当前值、项的索引和数组对象。这个函数返回的任何值都会作为第一个参数自动传给下一项。第一次迭代发生在数组的第二项上，因此第一个参数是数组的第一项，第二个参数就是数组的第二项(通常情况下只用到前两项)</p></blockquote><pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript"><span class="token keyword">let</span> arr <span class="token operator">=</span>  <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">5</span><span class="token punctuation">,</span><span class="token number">4</span><span class="token punctuation">,</span><span class="token number">5</span><span class="token punctuation">,</span><span class="token number">6</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">;</span><span class="token keyword">let</span> result <span class="token operator">=</span> arr<span class="token punctuation">.</span><span class="token function">reduce</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">pre<span class="token punctuation">,</span>current</span><span class="token punctuation">)</span><span class="token operator">=&gt;</span><span class="token punctuation">{</span>    <span class="token keyword">return</span> pre <span class="token operator">+</span> current <span class="token comment">//之前项+当前项</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>result<span class="token punctuation">)</span><span class="token comment">//输出结果：26</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li></ul>]]></content>
      
      
      <categories>
          
          <category> JavaScript </category>
          
      </categories>
      
      
        <tags>
            
            <tag> JavaScript </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>根据IP地址获取对方的地址</title>
      <link href="/2022/03/19/gen-ju-wang-luo-ip-huo-qu-di-zhi/"/>
      <url>/2022/03/19/gen-ju-wang-luo-ip-huo-qu-di-zhi/</url>
      
        <content type="html"><![CDATA[<h4 id=""><a href="#" class="headerlink" title=""></a></h4><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">import</span> requests<span class="token keyword">import</span> reheaders <span class="token operator">=</span> <span class="token punctuation">{</span>    <span class="token string">"user-agent"</span><span class="token punctuation">:</span> <span class="token string">"Mozilla/5.0 (Windows NT 10.0; Win64; x64) "</span>                  <span class="token string">"AppleWebKit/537.36 (KHTML, like Gecko) "</span>                  <span class="token string">"Chrome/98.0.4758.102 Safari/537.36"</span><span class="token punctuation">}</span>x_forwarded_for <span class="token operator">=</span> request<span class="token punctuation">.</span>META<span class="token punctuation">.</span>get<span class="token punctuation">(</span><span class="token string">'HTTP_X_FORWARDED_FOR'</span><span class="token punctuation">)</span>  <span class="token comment"># 判断是否使用代理</span><span class="token keyword">if</span> x_forwarded_for<span class="token punctuation">:</span>    ip <span class="token operator">=</span> x_forwarded_for<span class="token punctuation">.</span>split<span class="token punctuation">(</span><span class="token string">','</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span>  <span class="token comment"># 使用代理获取真实的ip</span><span class="token keyword">else</span><span class="token punctuation">:</span>    ip <span class="token operator">=</span> request<span class="token punctuation">.</span>META<span class="token punctuation">.</span>get<span class="token punctuation">(</span><span class="token string">'REMOTE_ADDR'</span><span class="token punctuation">)</span>  <span class="token comment"># 未使用代理获取IP</span><span class="token keyword">def</span> <span class="token function">get_address</span><span class="token punctuation">(</span>ip<span class="token punctuation">:</span> <span class="token builtin">str</span><span class="token punctuation">)</span> <span class="token operator">-</span><span class="token operator">&gt;</span> <span class="token builtin">dict</span><span class="token punctuation">:</span>    <span class="token triple-quoted-string string">"""    合法 ip 返回国家，城市，和运营商    查不到运营商的就返回 国家，城市    内网 ip返回 内网    :param ip:    :return:    """</span>    <span class="token comment"># 构造返回的字典</span>    response <span class="token operator">=</span> <span class="token punctuation">{</span>        <span class="token string">"country"</span><span class="token punctuation">:</span> <span class="token string">''</span><span class="token punctuation">,</span>        <span class="token string">"city"</span><span class="token punctuation">:</span> <span class="token string">''</span><span class="token punctuation">,</span>    <span class="token punctuation">}</span>    <span class="token comment"># 判断是否是内网 ip</span>    <span class="token keyword">if</span> ip<span class="token punctuation">.</span>startswith<span class="token punctuation">(</span><span class="token string">'127'</span><span class="token punctuation">)</span> <span class="token keyword">or</span> ip<span class="token punctuation">.</span>startswith<span class="token punctuation">(</span><span class="token string">'192.'</span><span class="token punctuation">)</span> <span class="token keyword">or</span> ip<span class="token punctuation">.</span>startswith<span class="token punctuation">(</span><span class="token string">'10.'</span><span class="token punctuation">)</span><span class="token punctuation">:</span>        response<span class="token punctuation">[</span><span class="token string">'msg'</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token string">'内网'</span>        <span class="token keyword">return</span> response    url <span class="token operator">=</span> <span class="token string-interpolation"><span class="token string">f'https://ip.cn/ip/</span><span class="token interpolation"><span class="token punctuation">{</span>ip<span class="token punctuation">}</span></span><span class="token string">.html'</span></span>    res <span class="token operator">=</span> requests<span class="token punctuation">.</span>get<span class="token punctuation">(</span>url<span class="token operator">=</span>url<span class="token punctuation">,</span> headers<span class="token operator">=</span>headers<span class="token punctuation">)</span>    result<span class="token punctuation">:</span> <span class="token builtin">str</span> <span class="token operator">=</span> re<span class="token punctuation">.</span>findall<span class="token punctuation">(</span><span class="token string">r'&lt;div id="tab0_address"&gt;(.*?)&lt;/div&gt;'</span><span class="token punctuation">,</span> res<span class="token punctuation">.</span>text<span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">.</span>strip<span class="token punctuation">(</span><span class="token punctuation">)</span>    res_list <span class="token operator">=</span> result<span class="token punctuation">.</span>split<span class="token punctuation">(</span><span class="token string">'  '</span><span class="token punctuation">)</span>    response<span class="token punctuation">[</span><span class="token string">'country'</span><span class="token punctuation">]</span> <span class="token operator">=</span> res_list<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span>    city_or_operator <span class="token operator">=</span> res_list<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span>    city <span class="token operator">=</span> city_or_operator<span class="token punctuation">.</span>split<span class="token punctuation">(</span><span class="token string">' '</span><span class="token punctuation">)</span>    response<span class="token punctuation">[</span><span class="token string">'city'</span><span class="token punctuation">]</span> <span class="token operator">=</span> city<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token operator">+</span> <span class="token string">'-'</span> <span class="token operator">+</span> city<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span>    <span class="token keyword">if</span> <span class="token builtin">len</span><span class="token punctuation">(</span>city<span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token number">3</span><span class="token punctuation">:</span>        response<span class="token punctuation">[</span><span class="token string">'operator'</span><span class="token punctuation">]</span> <span class="token operator">=</span> city<span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span>    <span class="token keyword">return</span> response<span class="token keyword">if</span> __name__ <span class="token operator">==</span> <span class="token string">'__main__'</span><span class="token punctuation">:</span>    <span class="token keyword">print</span><span class="token punctuation">(</span>get_address<span class="token punctuation">(</span><span class="token string">'127.0.0.1'</span><span class="token punctuation">)</span><span class="token punctuation">)</span>    <span class="token keyword">print</span><span class="token punctuation">(</span>get_address<span class="token punctuation">(</span><span class="token string">'192.168.44.33'</span><span class="token punctuation">)</span><span class="token punctuation">)</span>    <span class="token keyword">print</span><span class="token punctuation">(</span>get_address<span class="token punctuation">(</span><span class="token string">'117.136.24.38'</span><span class="token punctuation">)</span><span class="token punctuation">)</span>    <span class="token keyword">print</span><span class="token punctuation">(</span>get_address<span class="token punctuation">(</span><span class="token string">'218.76.35.2'</span><span class="token punctuation">)</span><span class="token punctuation">)</span>    <span class="token keyword">print</span><span class="token punctuation">(</span>get_address<span class="token punctuation">(</span><span class="token string">'110.53.253.137'</span><span class="token punctuation">)</span><span class="token punctuation">)</span>    <span class="token keyword">print</span><span class="token punctuation">(</span>get_address<span class="token punctuation">(</span><span class="token string">'36.99.136.139'</span><span class="token punctuation">)</span><span class="token punctuation">)</span>    <span class="token keyword">print</span><span class="token punctuation">(</span>get_address<span class="token punctuation">(</span><span class="token string">'106.13.185.190'</span><span class="token punctuation">)</span><span class="token punctuation">)</span>    <span class="token keyword">print</span><span class="token punctuation">(</span>get_address<span class="token punctuation">(</span><span class="token string">'42.194.130.81'</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>欢迎评论交流</p>]]></content>
      
      
      <categories>
          
          <category> Python </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Python </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>网页轮播功能</title>
      <link href="/2022/01/03/shi-xian-lun-bo-tu-gong-neng/"/>
      <url>/2022/01/03/shi-xian-lun-bo-tu-gong-neng/</url>
      
        <content type="html"><![CDATA[<h3 id="1-纯CSS实现轮播功能"><a href="#1-纯CSS实现轮播功能" class="headerlink" title="1.纯CSS实现轮播功能"></a>1.纯CSS实现轮播功能</h3><p>思路：设置一个超长标签作为图片容器(画版) 赋予属性transform:translate3d(x,y,z)，容器当作窗口；再编写js代码来控制画板在x轴上移动一个步长距离，设置步长刚好等于图片宽度，就实现了轮播图效果。重点使用”overflow:hidden”溢出隐藏还有”js的排他思想” 。实例如下：</p><pre class="line-numbers language-html" data-language="html"><code class="language-html"><span class="token doctype"><span class="token punctuation">&lt;!</span><span class="token doctype-tag">DOCTYPE</span> <span class="token name">html</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>html</span> <span class="token attr-name">lang</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>en<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>head</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">charset</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>UTF-8<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">http-equiv</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>X-UA-Compatible<span class="token punctuation">"</span></span> <span class="token attr-name">content</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>IE=edge<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>viewport<span class="token punctuation">"</span></span> <span class="token attr-name">content</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>width=device-width, initial-scale=1.0<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>title</span><span class="token punctuation">&gt;</span></span>Document<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>title</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>head</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>style</span><span class="token punctuation">&gt;</span></span><span class="token style"><span class="token language-css">     <span class="token selector">*</span> <span class="token punctuation">{</span>        <span class="token property">margin</span><span class="token punctuation">:</span> 0<span class="token punctuation">;</span>        <span class="token property">padding</span><span class="token punctuation">:</span> 0<span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token selector">body</span> <span class="token punctuation">{</span>        <span class="token property">height</span><span class="token punctuation">:</span> 100vh<span class="token punctuation">;</span>        <span class="token property">display</span><span class="token punctuation">:</span> flex<span class="token punctuation">;</span>        <span class="token property">justify-content</span><span class="token punctuation">:</span> center<span class="token punctuation">;</span>        <span class="token property">align-items</span><span class="token punctuation">:</span> center<span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token selector">main</span> <span class="token punctuation">{</span>        <span class="token property">width</span><span class="token punctuation">:</span> 520px<span class="token punctuation">;</span>        <span class="token property">overflow-x</span><span class="token punctuation">:</span> hidden<span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token selector">.box</span> <span class="token punctuation">{</span>        <span class="token property">width</span><span class="token punctuation">:</span> 2080px<span class="token punctuation">;</span>        <span class="token property">animation</span><span class="token punctuation">:</span> pic_change 12s linear infinite<span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token selector">.container</span> <span class="token punctuation">{</span>        <span class="token property">float</span><span class="token punctuation">:</span> left<span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token atrule"><span class="token rule">@keyframes</span> pic_change</span> <span class="token punctuation">{</span>        <span class="token selector">0%</span> <span class="token punctuation">{</span>            <span class="token property">transform</span><span class="token punctuation">:</span> <span class="token function">translateX</span><span class="token punctuation">(</span>0px<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>        <span class="token selector">25%</span> <span class="token punctuation">{</span>            <span class="token property">transform</span><span class="token punctuation">:</span> <span class="token function">translateX</span><span class="token punctuation">(</span>-520px<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>        <span class="token selector">50%</span> <span class="token punctuation">{</span>            <span class="token property">transform</span><span class="token punctuation">:</span> <span class="token function">translateX</span><span class="token punctuation">(</span>-1040px<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>        <span class="token selector">75%</span> <span class="token punctuation">{</span>            <span class="token property">transform</span><span class="token punctuation">:</span> <span class="token function">translateX</span><span class="token punctuation">(</span>-1560px<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>        <span class="token selector">100%</span> <span class="token punctuation">{</span>            <span class="token property">transform</span><span class="token punctuation">:</span> <span class="token function">translateX</span><span class="token punctuation">(</span>-2080px<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>    <span class="token punctuation">}</span></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>style</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>main</span><span class="token punctuation">&gt;</span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>box<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>container<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>img</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>../static/image4/1.jpg<span class="token punctuation">"</span></span> <span class="token attr-name">alt</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span><span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>container<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>img</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>../static/image4/2.jpg<span class="token punctuation">"</span></span> <span class="token attr-name">alt</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span><span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>container<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>img</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>../static/image4/3.jpg<span class="token punctuation">"</span></span> <span class="token attr-name">alt</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span><span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>container<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>img</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>../static/image4/4.jpg<span class="token punctuation">"</span></span> <span class="token attr-name">alt</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span><span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>main</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>html</span><span class="token punctuation">&gt;</span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>“动画实现轮播图”的缺点是图片连续变化，没有停顿。</p><h3 id="2-JavaScript实现轮播功能"><a href="#2-JavaScript实现轮播功能" class="headerlink" title="2.JavaScript实现轮播功能"></a>2.JavaScript实现轮播功能</h3><p>原生Js实现轮播图功能，实例如下：</p><pre class="line-numbers language-html" data-language="html"><code class="language-html"><span class="token doctype"><span class="token punctuation">&lt;!</span><span class="token doctype-tag">DOCTYPE</span> <span class="token name">html</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>html</span> <span class="token attr-name">lang</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>en<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>head</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">charset</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>UTF-8<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">http-equiv</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>X-UA-Compatible<span class="token punctuation">"</span></span> <span class="token attr-name">content</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>IE=edge<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>viewport<span class="token punctuation">"</span></span> <span class="token attr-name">content</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>width=device-width, initial-scale=1.0<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>title</span><span class="token punctuation">&gt;</span></span>Document<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>title</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>style</span><span class="token punctuation">&gt;</span></span><span class="token style"><span class="token language-css">        <span class="token selector">*</span> <span class="token punctuation">{</span>            <span class="token property">padding</span><span class="token punctuation">:</span> 0<span class="token punctuation">;</span>            <span class="token property">margin</span><span class="token punctuation">:</span> 0<span class="token punctuation">;</span>        <span class="token punctuation">}</span>        <span class="token selector">.shell_box</span> <span class="token punctuation">{</span>            <span class="token property">width</span><span class="token punctuation">:</span> 520px<span class="token punctuation">;</span>            <span class="token property">height</span><span class="token punctuation">:</span> 280px<span class="token punctuation">;</span>            <span class="token property">margin</span><span class="token punctuation">:</span> 0 auto<span class="token punctuation">;</span>        <span class="token punctuation">}</span>        <span class="token selector">.shell</span> <span class="token punctuation">{</span>            <span class="token property">position</span><span class="token punctuation">:</span> relative<span class="token punctuation">;</span>            <span class="token property">width</span><span class="token punctuation">:</span> 520px<span class="token punctuation">;</span>            <span class="token property">height</span><span class="token punctuation">:</span> 280px<span class="token punctuation">;</span>            <span class="token property">border-radius</span><span class="token punctuation">:</span> 12px<span class="token punctuation">;</span>            <span class="token property">overflow</span><span class="token punctuation">:</span> hidden<span class="token punctuation">;</span>        <span class="token punctuation">}</span>        <span class="token selector">.box</span> <span class="token punctuation">{</span>            <span class="token property">position</span><span class="token punctuation">:</span> absolute<span class="token punctuation">;</span>            <span class="token property">width</span><span class="token punctuation">:</span> 3640px<span class="token punctuation">;</span>            <span class="token property">transition</span><span class="token punctuation">:</span> all 1s<span class="token punctuation">;</span>            <span class="token property">-webkit-backface-visibility</span><span class="token punctuation">:</span> hidden<span class="token punctuation">;</span>            <span class="token property">opacity</span><span class="token punctuation">:</span> 1<span class="token punctuation">;</span>            <span class="token property">transform</span><span class="token punctuation">:</span> <span class="token function">translate3d</span><span class="token punctuation">(</span>0px<span class="token punctuation">,</span> 0px<span class="token punctuation">,</span> 0px<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>        <span class="token selector">.pic</span> <span class="token punctuation">{</span>            <span class="token property">width</span><span class="token punctuation">:</span> 520px<span class="token punctuation">;</span>            <span class="token property">height</span><span class="token punctuation">:</span> 280px<span class="token punctuation">;</span>            <span class="token property">display</span><span class="token punctuation">:</span> block<span class="token punctuation">;</span>            <span class="token property">float</span><span class="token punctuation">:</span> left<span class="token punctuation">;</span>        <span class="token punctuation">}</span>        <span class="token selector">.left_prev</span> <span class="token punctuation">{</span>            <span class="token property">position</span><span class="token punctuation">:</span> absolute<span class="token punctuation">;</span>            <span class="token property">left</span><span class="token punctuation">:</span> 0<span class="token punctuation">;</span>            <span class="token property">top</span><span class="token punctuation">:</span> 130px<span class="token punctuation">;</span>            <span class="token property">width</span><span class="token punctuation">:</span> 20px<span class="token punctuation">;</span>            <span class="token property">height</span><span class="token punctuation">:</span> 30px<span class="token punctuation">;</span>            <span class="token property">line-height</span><span class="token punctuation">:</span> 30px<span class="token punctuation">;</span>            <span class="token property">text-align</span><span class="token punctuation">:</span> center<span class="token punctuation">;</span>            <span class="token property">background-color</span><span class="token punctuation">:</span> <span class="token function">rgba</span><span class="token punctuation">(</span>255<span class="token punctuation">,</span> 255<span class="token punctuation">,</span> 255<span class="token punctuation">,</span> .7<span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token property">border-top-right-radius</span><span class="token punctuation">:</span> 8px<span class="token punctuation">;</span>            <span class="token property">border-bottom-right-radius</span><span class="token punctuation">:</span> 8px<span class="token punctuation">;</span>            <span class="token property">cursor</span><span class="token punctuation">:</span> pointer<span class="token punctuation">;</span>            <span class="token property">user-select</span><span class="token punctuation">:</span> none<span class="token punctuation">;</span>        <span class="token punctuation">}</span>        <span class="token selector">.left_prev:hover</span> <span class="token punctuation">{</span>            <span class="token property">background-color</span><span class="token punctuation">:</span> <span class="token function">rgba</span><span class="token punctuation">(</span>0<span class="token punctuation">,</span> 0<span class="token punctuation">,</span> 0<span class="token punctuation">,</span> .3<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>        <span class="token selector">.right_prev</span> <span class="token punctuation">{</span>            <span class="token property">position</span><span class="token punctuation">:</span> absolute<span class="token punctuation">;</span>            <span class="token property">right</span><span class="token punctuation">:</span> 0<span class="token punctuation">;</span>            <span class="token property">top</span><span class="token punctuation">:</span> 130px<span class="token punctuation">;</span>            <span class="token property">width</span><span class="token punctuation">:</span> 20px<span class="token punctuation">;</span>            <span class="token property">height</span><span class="token punctuation">:</span> 30px<span class="token punctuation">;</span>            <span class="token property">line-height</span><span class="token punctuation">:</span> 30px<span class="token punctuation">;</span>            <span class="token property">text-align</span><span class="token punctuation">:</span> center<span class="token punctuation">;</span>            <span class="token property">background-color</span><span class="token punctuation">:</span> <span class="token function">rgba</span><span class="token punctuation">(</span>255<span class="token punctuation">,</span> 255<span class="token punctuation">,</span> 255<span class="token punctuation">,</span> .7<span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token property">border-top-left-radius</span><span class="token punctuation">:</span> 8px<span class="token punctuation">;</span>            <span class="token property">border-bottom-left-radius</span><span class="token punctuation">:</span> 8px<span class="token punctuation">;</span>            <span class="token property">cursor</span><span class="token punctuation">:</span> pointer<span class="token punctuation">;</span>            <span class="token property">user-select</span><span class="token punctuation">:</span> none<span class="token punctuation">;</span>            <span class="token comment">/*让元素中的文字不可选取*/</span>        <span class="token punctuation">}</span>        <span class="token selector">.right_prev:hover</span> <span class="token punctuation">{</span>            <span class="token property">background-color</span><span class="token punctuation">:</span> <span class="token function">rgba</span><span class="token punctuation">(</span>0<span class="token punctuation">,</span> 0<span class="token punctuation">,</span> 0<span class="token punctuation">,</span> .3<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>        <span class="token selector">.selector</span> <span class="token punctuation">{</span>            <span class="token property">position</span><span class="token punctuation">:</span> absolute<span class="token punctuation">;</span>            <span class="token property">bottom</span><span class="token punctuation">:</span> 0<span class="token punctuation">;</span>            <span class="token property">left</span><span class="token punctuation">:</span> 215px<span class="token punctuation">;</span>            <span class="token property">width</span><span class="token punctuation">:</span> 90px<span class="token punctuation">;</span>            <span class="token property">height</span><span class="token punctuation">:</span> 15px<span class="token punctuation">;</span>            <span class="token property">border-radius</span><span class="token punctuation">:</span> 15px<span class="token punctuation">;</span>            <span class="token property">background-color</span><span class="token punctuation">:</span> <span class="token function">rgba</span><span class="token punctuation">(</span>0<span class="token punctuation">,</span> 0<span class="token punctuation">,</span> 0<span class="token punctuation">,</span> .3<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>        <span class="token selector">.selector a</span> <span class="token punctuation">{</span>            <span class="token property">text-decoration</span><span class="token punctuation">:</span> none<span class="token punctuation">;</span>            <span class="token property">display</span><span class="token punctuation">:</span> block<span class="token punctuation">;</span>            <span class="token property">width</span><span class="token punctuation">:</span> 8px<span class="token punctuation">;</span>            <span class="token property">height</span><span class="token punctuation">:</span> 8px<span class="token punctuation">;</span>            <span class="token property">border-radius</span><span class="token punctuation">:</span> 50%<span class="token punctuation">;</span>            <span class="token property">background-color</span><span class="token punctuation">:</span> #fff<span class="token punctuation">;</span>            <span class="token property">float</span><span class="token punctuation">:</span> left<span class="token punctuation">;</span>            <span class="token property">margin-left</span><span class="token punctuation">:</span> 6px<span class="token punctuation">;</span>            <span class="token property">margin-top</span><span class="token punctuation">:</span> 3.5px<span class="token punctuation">;</span>        <span class="token punctuation">}</span>        <span class="token selector">.selector .sele_a</span> <span class="token punctuation">{</span>            <span class="token property">background-color</span><span class="token punctuation">:</span> <span class="token function">rgb</span><span class="token punctuation">(</span>255<span class="token punctuation">,</span> 80<span class="token punctuation">,</span> 0<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>    </span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>style</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>head</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>shell_box<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>shell<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>box<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>pic<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>#<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>img</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>../static/image4/1.jpg<span class="token punctuation">"</span></span> <span class="token attr-name">alt</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span><span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>pic<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>#<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>img</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>../static/image4/2.jpg<span class="token punctuation">"</span></span> <span class="token attr-name">alt</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span><span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>pic<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>#<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>img</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>../static/image4/3.jpg<span class="token punctuation">"</span></span> <span class="token attr-name">alt</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span><span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>pic<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>#<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>img</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>../static/image4/4.jpg<span class="token punctuation">"</span></span> <span class="token attr-name">alt</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span><span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>pic<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>#<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>img</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>../static/image4/5.jpg<span class="token punctuation">"</span></span> <span class="token attr-name">alt</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span><span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>pic<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>#<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>img</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>../static/image4/6.jpg<span class="token punctuation">"</span></span> <span class="token attr-name">alt</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span><span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>left_prev<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span><span class="token entity named-entity" title="<">&amp;lt;</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>selector<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>javascript:;<span class="token punctuation">"</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>sele_a<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">&gt;</span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>javascript:;<span class="token punctuation">"</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span><span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">&gt;</span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>javascript:;<span class="token punctuation">"</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span><span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">&gt;</span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>javascript:;<span class="token punctuation">"</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span><span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">&gt;</span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>javascript:;<span class="token punctuation">"</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span><span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">&gt;</span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>javascript:;<span class="token punctuation">"</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span><span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">&gt;</span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>right_prev<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span><span class="token entity named-entity" title=">">&amp;gt;</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">&gt;</span></span><span class="token script"><span class="token language-javascript">        <span class="token comment">//Dom操作</span>        <span class="token keyword">var</span> box <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">querySelector</span><span class="token punctuation">(</span><span class="token string">'.box'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">var</span> pic_width <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">querySelector</span><span class="token punctuation">(</span><span class="token string">'.pic'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">var</span> a_list <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">querySelectorAll</span><span class="token punctuation">(</span><span class="token string">'.selector &gt; a'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">var</span> left_prev <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">querySelector</span><span class="token punctuation">(</span><span class="token string">'.left_prev'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">var</span> right_prev <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">querySelector</span><span class="token punctuation">(</span><span class="token string">'.right_prev'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">let</span> step <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>  <span class="token comment">//element.offsetWidth()</span>        box<span class="token punctuation">.</span><span class="token function">addEventListener</span><span class="token punctuation">(</span><span class="token string">'mouseenter'</span><span class="token punctuation">,</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>            <span class="token function">clearInterval</span><span class="token punctuation">(</span>time_c<span class="token punctuation">)</span><span class="token punctuation">;</span>            time_c <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        box<span class="token punctuation">.</span><span class="token function">addEventListener</span><span class="token punctuation">(</span><span class="token string">'mouseleave'</span><span class="token punctuation">,</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>            time_c <span class="token operator">=</span> <span class="token function">timer</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        left_prev<span class="token punctuation">.</span><span class="token function">addEventListener</span><span class="token punctuation">(</span><span class="token string">'mouseenter'</span><span class="token punctuation">,</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>            <span class="token function">clearInterval</span><span class="token punctuation">(</span>time_c<span class="token punctuation">)</span><span class="token punctuation">;</span>            time_c <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        left_prev<span class="token punctuation">.</span><span class="token function">addEventListener</span><span class="token punctuation">(</span><span class="token string">'mouseleave'</span><span class="token punctuation">,</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>            time_c <span class="token operator">=</span> <span class="token function">timer</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        right_prev<span class="token punctuation">.</span><span class="token function">addEventListener</span><span class="token punctuation">(</span><span class="token string">'mouseenter'</span><span class="token punctuation">,</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>            <span class="token function">clearInterval</span><span class="token punctuation">(</span>time_c<span class="token punctuation">)</span><span class="token punctuation">;</span>            time_c <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        right_prev<span class="token punctuation">.</span><span class="token function">addEventListener</span><span class="token punctuation">(</span><span class="token string">'mouseleave'</span><span class="token punctuation">,</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>            time_c <span class="token operator">=</span> <span class="token function">timer</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">var</span> j <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> j <span class="token operator">&lt;</span> a_list<span class="token punctuation">.</span>length<span class="token punctuation">;</span> j<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>            a_list<span class="token punctuation">[</span>j<span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">addEventListener</span><span class="token punctuation">(</span><span class="token string">'click'</span><span class="token punctuation">,</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>                <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">var</span> k <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> k <span class="token operator">&lt;</span> a_list<span class="token punctuation">.</span>length<span class="token punctuation">;</span> k<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>                    a_list<span class="token punctuation">[</span>k<span class="token punctuation">]</span><span class="token punctuation">.</span>className <span class="token operator">=</span> <span class="token string">''</span><span class="token punctuation">;</span>                    a_list<span class="token punctuation">[</span>k<span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">setAttribute</span><span class="token punctuation">(</span><span class="token string">'index'</span><span class="token punctuation">,</span> k<span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token punctuation">}</span>                <span class="token keyword">this</span><span class="token punctuation">.</span>className <span class="token operator">=</span> <span class="token string">'sele_a'</span><span class="token punctuation">;</span>                box<span class="token punctuation">.</span>style<span class="token punctuation">.</span>transform <span class="token operator">=</span> <span class="token string">'translate3d('</span> <span class="token operator">+</span> <span class="token punctuation">(</span><span class="token operator">-</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token function">parseInt</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">getAttribute</span><span class="token punctuation">(</span><span class="token string">'index'</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">*</span> pic_width<span class="token punctuation">.</span>offsetWidth<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token string">'px,0px,0px)'</span><span class="token punctuation">;</span>            <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            a_list<span class="token punctuation">[</span>j<span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">addEventListener</span><span class="token punctuation">(</span><span class="token string">'mouseenter'</span><span class="token punctuation">,</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>                <span class="token function">clearInterval</span><span class="token punctuation">(</span>time_c<span class="token punctuation">)</span><span class="token punctuation">;</span>                time_c <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span>            <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            a_list<span class="token punctuation">[</span>j<span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">addEventListener</span><span class="token punctuation">(</span><span class="token string">'mouseleave'</span><span class="token punctuation">,</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>                time_c <span class="token operator">=</span> <span class="token function">timer</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>        left_prev<span class="token punctuation">.</span><span class="token function">addEventListener</span><span class="token punctuation">(</span><span class="token string">'click'</span><span class="token punctuation">,</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>            <span class="token keyword">var</span> now_a <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">querySelector</span><span class="token punctuation">(</span><span class="token string">'.sele_a'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">var</span> k <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> k <span class="token operator">&lt;</span> a_list<span class="token punctuation">.</span>length<span class="token punctuation">;</span> k<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>                a_list<span class="token punctuation">[</span>k<span class="token punctuation">]</span><span class="token punctuation">.</span>className <span class="token operator">=</span> <span class="token string">''</span><span class="token punctuation">;</span>                a_list<span class="token punctuation">[</span>k<span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">setAttribute</span><span class="token punctuation">(</span><span class="token string">'index'</span><span class="token punctuation">,</span> k<span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token punctuation">}</span>            <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">parseInt</span><span class="token punctuation">(</span>now_a<span class="token punctuation">.</span><span class="token function">getAttribute</span><span class="token punctuation">(</span><span class="token string">'index'</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>                box<span class="token punctuation">.</span>style<span class="token punctuation">.</span>transform <span class="token operator">=</span> <span class="token string">'translate3d('</span> <span class="token operator">+</span> <span class="token punctuation">(</span><span class="token operator">-</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token function">parseInt</span><span class="token punctuation">(</span>now_a<span class="token punctuation">.</span><span class="token function">getAttribute</span><span class="token punctuation">(</span><span class="token string">'index'</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token number">5</span><span class="token punctuation">)</span> <span class="token operator">*</span> pic_width<span class="token punctuation">.</span>offsetWidth<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token string">'px,0px,0px)'</span><span class="token punctuation">;</span>                a_list<span class="token punctuation">[</span><span class="token function">parseInt</span><span class="token punctuation">(</span>now_a<span class="token punctuation">.</span><span class="token function">getAttribute</span><span class="token punctuation">(</span><span class="token string">'index'</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token number">5</span><span class="token punctuation">]</span><span class="token punctuation">.</span>className <span class="token operator">=</span> <span class="token string">'sele_a'</span><span class="token punctuation">;</span>                box<span class="token punctuation">.</span>style<span class="token punctuation">.</span>transition <span class="token operator">=</span> <span class="token string">'all 0s'</span><span class="token punctuation">;</span>            <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>                box<span class="token punctuation">.</span>style<span class="token punctuation">.</span>transform <span class="token operator">=</span> <span class="token string">'translate3d('</span> <span class="token operator">+</span> <span class="token punctuation">(</span><span class="token operator">-</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token function">parseInt</span><span class="token punctuation">(</span>now_a<span class="token punctuation">.</span><span class="token function">getAttribute</span><span class="token punctuation">(</span><span class="token string">'index'</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token operator">*</span> pic_width<span class="token punctuation">.</span>offsetWidth<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token string">'px,0px,0px)'</span><span class="token punctuation">;</span>                a_list<span class="token punctuation">[</span><span class="token function">parseInt</span><span class="token punctuation">(</span>now_a<span class="token punctuation">.</span><span class="token function">getAttribute</span><span class="token punctuation">(</span><span class="token string">'index'</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">.</span>className <span class="token operator">=</span> <span class="token string">'sele_a'</span><span class="token punctuation">;</span>                box<span class="token punctuation">.</span>style<span class="token punctuation">.</span>transition <span class="token operator">=</span> <span class="token string">'all 1s'</span>            <span class="token punctuation">}</span>        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        right_prev<span class="token punctuation">.</span><span class="token function">addEventListener</span><span class="token punctuation">(</span><span class="token string">'click'</span><span class="token punctuation">,</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>            <span class="token keyword">var</span> now_a <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">querySelector</span><span class="token punctuation">(</span><span class="token string">'.sele_a'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">var</span> k <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> k <span class="token operator">&lt;</span> a_list<span class="token punctuation">.</span>length<span class="token punctuation">;</span> k<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>                a_list<span class="token punctuation">[</span>k<span class="token punctuation">]</span><span class="token punctuation">.</span>className <span class="token operator">=</span> <span class="token string">''</span><span class="token punctuation">;</span>                a_list<span class="token punctuation">[</span>k<span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">setAttribute</span><span class="token punctuation">(</span><span class="token string">'index'</span><span class="token punctuation">,</span> k<span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token punctuation">}</span>            <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">parseInt</span><span class="token punctuation">(</span>now_a<span class="token punctuation">.</span><span class="token function">getAttribute</span><span class="token punctuation">(</span><span class="token string">'index'</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token number">5</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>                a_list<span class="token punctuation">[</span><span class="token function">parseInt</span><span class="token punctuation">(</span>now_a<span class="token punctuation">.</span><span class="token function">getAttribute</span><span class="token punctuation">(</span><span class="token string">'index'</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">-</span> <span class="token number">5</span><span class="token punctuation">]</span><span class="token punctuation">.</span>className <span class="token operator">=</span> <span class="token string">'sele_a'</span><span class="token punctuation">;</span>                box<span class="token punctuation">.</span>style<span class="token punctuation">.</span>transform <span class="token operator">=</span> <span class="token string">'translate3d('</span> <span class="token operator">+</span> <span class="token punctuation">(</span><span class="token operator">-</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token function">parseInt</span><span class="token punctuation">(</span>now_a<span class="token punctuation">.</span><span class="token function">getAttribute</span><span class="token punctuation">(</span><span class="token string">'index'</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">-</span> <span class="token number">5</span><span class="token punctuation">)</span> <span class="token operator">*</span> pic_width<span class="token punctuation">.</span>offsetWidth<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token string">'px,0px,0px)'</span><span class="token punctuation">;</span>                box<span class="token punctuation">.</span>style<span class="token punctuation">.</span>transition <span class="token operator">=</span> <span class="token string">'all 0s'</span>            <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>                box<span class="token punctuation">.</span>style<span class="token punctuation">.</span>transform <span class="token operator">=</span> <span class="token string">'translate3d('</span> <span class="token operator">+</span> <span class="token punctuation">(</span><span class="token operator">-</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token function">parseInt</span><span class="token punctuation">(</span>now_a<span class="token punctuation">.</span><span class="token function">getAttribute</span><span class="token punctuation">(</span><span class="token string">'index'</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token operator">*</span> pic_width<span class="token punctuation">.</span>offsetWidth<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token string">'px,0px,0px)'</span><span class="token punctuation">;</span>                a_list<span class="token punctuation">[</span><span class="token function">parseInt</span><span class="token punctuation">(</span>now_a<span class="token punctuation">.</span><span class="token function">getAttribute</span><span class="token punctuation">(</span><span class="token string">'index'</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">.</span>className <span class="token operator">=</span> <span class="token string">'sele_a'</span><span class="token punctuation">;</span>                box<span class="token punctuation">.</span>style<span class="token punctuation">.</span>transition <span class="token operator">=</span> <span class="token string">'all 1s'</span>            <span class="token punctuation">}</span>        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment">//定时器</span>        <span class="token keyword">function</span> <span class="token function">timer</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>            <span class="token keyword">var</span> time_count <span class="token operator">=</span> <span class="token function">setInterval</span><span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>                right_prev<span class="token punctuation">.</span><span class="token function">click</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token number">3000</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token keyword">return</span> time_count<span class="token punctuation">;</span>        <span class="token punctuation">}</span>                time_c <span class="token operator">=</span> <span class="token function">timer</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    </span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>html</span><span class="token punctuation">&gt;</span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> HTML </category>
          
          <category> Css </category>
          
          <category> JavaScript </category>
          
      </categories>
      
      
        <tags>
            
            <tag> JavaScript </tag>
            
            <tag> HTML </tag>
            
            <tag> Css </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>实现返回顶部按钮功能</title>
      <link href="/2022/01/02/fan-hui-ding-bu-an-niu/"/>
      <url>/2022/01/02/fan-hui-ding-bu-an-niu/</url>
      
        <content type="html"><![CDATA[<h3 id="1-功能要求"><a href="#1-功能要求" class="headerlink" title="1.功能要求"></a>1.功能要求</h3><p>点击”返回顶部”按钮，滚轮会回到页面的顶部。想要实现这个功能需要用到滚轮事件scroll()，用于监听滚轮的位置；利用click()点击事件实现“返回顶部”功能,而动画效果就需要使用到animate()函数，实现滚轮带有动画感地缓慢返回顶部，不会显得非常突兀。</p><h3 id="2-代码实现"><a href="#2-代码实现" class="headerlink" title="2.代码实现"></a>2.代码实现</h3><pre class="line-numbers language-html" data-language="html"><code class="language-html"><span class="token doctype"><span class="token punctuation">&lt;!</span><span class="token doctype-tag">DOCTYPE</span> <span class="token name">html</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>html</span> <span class="token attr-name">lang</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>en<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>head</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">charset</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>UTF-8<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">http-equiv</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>X-UA-Compatible<span class="token punctuation">"</span></span> <span class="token attr-name">content</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>IE=edge<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>viewport<span class="token punctuation">"</span></span> <span class="token attr-name">content</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>width=device-width, initial-scale=1.0<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>title</span><span class="token punctuation">&gt;</span></span>Document<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>title</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>../jquery/jquery.min.js<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span><span class="token script"></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>head</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>style</span><span class="token punctuation">&gt;</span></span><span class="token style"><span class="token language-css">    <span class="token selector">*</span> <span class="token punctuation">{</span>        <span class="token property">margin</span><span class="token punctuation">:</span> 0<span class="token punctuation">;</span>        <span class="token property">padding</span><span class="token punctuation">:</span> 0<span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token selector">.box</span> <span class="token punctuation">{</span>        <span class="token property">width</span><span class="token punctuation">:</span> 90%<span class="token punctuation">;</span>        <span class="token property">height</span><span class="token punctuation">:</span> 280px<span class="token punctuation">;</span>        <span class="token property">background-color</span><span class="token punctuation">:</span> aquamarine<span class="token punctuation">;</span>        <span class="token property">margin</span><span class="token punctuation">:</span> 10px auto<span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token selector">.back_top</span> <span class="token punctuation">{</span>        <span class="token property">position</span><span class="token punctuation">:</span> fixed<span class="token punctuation">;</span>        <span class="token property">width</span><span class="token punctuation">:</span> 60px<span class="token punctuation">;</span>        <span class="token property">height</span><span class="token punctuation">:</span> 60px<span class="token punctuation">;</span>        <span class="token property">border-radius</span><span class="token punctuation">:</span> 50%<span class="token punctuation">;</span>        <span class="token property">right</span><span class="token punctuation">:</span> 10px<span class="token punctuation">;</span>        <span class="token property">bottom</span><span class="token punctuation">:</span> 5px<span class="token punctuation">;</span>        <span class="token property">border</span><span class="token punctuation">:</span> 2px solid #333<span class="token punctuation">;</span>        <span class="token property">display</span><span class="token punctuation">:</span> none<span class="token punctuation">;</span>        <span class="token property">cursor</span><span class="token punctuation">:</span> pointer<span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token selector">.back_top #top</span> <span class="token punctuation">{</span>        <span class="token property">position</span><span class="token punctuation">:</span> relative<span class="token punctuation">;</span>        <span class="token property">width</span><span class="token punctuation">:</span> 40px<span class="token punctuation">;</span>        <span class="token property">height</span><span class="token punctuation">:</span> 40px<span class="token punctuation">;</span>        <span class="token property">margin</span><span class="token punctuation">:</span> 10px auto<span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token selector">.back_top #top::after</span> <span class="token punctuation">{</span>        <span class="token property">position</span><span class="token punctuation">:</span> absolute<span class="token punctuation">;</span>        <span class="token property">content</span><span class="token punctuation">:</span> <span class="token string">''</span><span class="token punctuation">;</span>        <span class="token property">width</span><span class="token punctuation">:</span> 50%<span class="token punctuation">;</span>        <span class="token property">height</span><span class="token punctuation">:</span> 50%<span class="token punctuation">;</span>        <span class="token property">border-left</span><span class="token punctuation">:</span> 2px solid #000<span class="token punctuation">;</span>        <span class="token property">border-bottom</span><span class="token punctuation">:</span> 2px solid #000<span class="token punctuation">;</span>        <span class="token property">transform</span><span class="token punctuation">:</span> <span class="token function">rotate</span><span class="token punctuation">(</span>135deg<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token property">top</span><span class="token punctuation">:</span> 35%<span class="token punctuation">;</span>        <span class="token property">left</span><span class="token punctuation">:</span> 10px<span class="token punctuation">;</span>    <span class="token punctuation">}</span></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>style</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>box<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>box<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>box<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>box<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>box<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>back_top<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>top<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">&gt;</span></span><span class="token script"><span class="token language-javascript">        <span class="token function">$</span><span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>            <span class="token function">$</span><span class="token punctuation">(</span>document<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">scroll</span><span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>                <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">$</span><span class="token punctuation">(</span><span class="token string">'body,html'</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">scrollTop</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">&gt;</span> <span class="token number">200</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>                    <span class="token function">$</span><span class="token punctuation">(</span><span class="token string">'.back_top'</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">slideDown</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>                    <span class="token function">$</span><span class="token punctuation">(</span><span class="token string">'.back_top'</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">slideUp</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token punctuation">}</span>            <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment">//滚动条到200 这个高度的时候返回顶部按钮才显示出来</span>            <span class="token function">$</span><span class="token punctuation">(</span><span class="token string">'.back_top'</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">click</span><span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>                <span class="token function">$</span><span class="token punctuation">(</span><span class="token string">'body,html'</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">animate</span><span class="token punctuation">(</span><span class="token punctuation">{</span>                    scrollTop<span class="token operator">:</span> <span class="token number">0</span><span class="token punctuation">,</span>                <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token number">500</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token punctuation">}</span><span class="token punctuation">)</span>        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    </span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>html</span><span class="token punctuation">&gt;</span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>在点击事件的回调函数中执行animate(),这样触发点击事件之后，滚轮就有了动画效果。animate()函数是jquery库中新定义的一种方法，它绕过了DOM操作，显得这个功能不难实现，但如果我们自己用JS实现,还是有些难度的。</p>]]></content>
      
      
      <categories>
          
          <category> HTML </category>
          
          <category> Css </category>
          
          <category> JavaScript </category>
          
      </categories>
      
      
        <tags>
            
            <tag> JavaScript </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>数据挖掘和分析小结</title>
      <link href="/2021/12/24/qian-tan-shu-ju-wa-jue-yu-fen-xi/"/>
      <url>/2021/12/24/qian-tan-shu-ju-wa-jue-yu-fen-xi/</url>
      
        <content type="html"><![CDATA[<h3 id="1-获取数据"><a href="#1-获取数据" class="headerlink" title="1.获取数据"></a>1.获取数据</h3><p>获取数据的渠道有许多，大部分人都是通过搜索引擎搜索关键词，在返回的页面中一个个筛选符合要求的数据，然后直接在网页上复制粘贴数据，再使用文本编辑器修改数据，但这也只对那些”公开数据”的网站有效，并且有效率低、信息面狭窄(有些数据是不被允许我们直接获取)等缺点。在这个互联网大数据时代，想在海量的数据中筛选出对自己有用的信息，就需要借助更精准有效的技术————网络爬虫。</p><h3 id="2-获取数据的技术"><a href="#2-获取数据的技术" class="headerlink" title="2.获取数据的技术"></a>2.获取数据的技术</h3><ul><li>“爬虫”是指使用程序按照一定的规则从网络上不间断的爬取符合要求的数据，也称网络数据采集。这是最灵活和常用的获取数据的方法。面对不同的数据，应用到的爬虫框架也不同，编写的爬虫程序也不同。</li><li>实现”爬虫”的编程语言有很多，例如PHP、Java，C#，C++,Python等,然而我们听见最多的是Python爬虫，这是因为利用python来实现爬虫比较简单而且有着相对于其他语言更齐全的功能。</li><li>一个爬虫项目的创建和管理需要有一个良好的运行环境，常用的是Pycharm软件，可以去该软件的官网下载。</li><li>安装常用的内置库<pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">import</span> requests<span class="token keyword">from</span> bs4 <span class="token keyword">import</span> BeautifulSoup  <span class="token keyword">import</span> xlwt  <span class="token comment">#pip install xlwt</span><span class="token keyword">import</span> re  <span class="token comment">#正则表达式库，自带的不需要下载</span><span class="token comment">###解析工具有 re和beautifulsoup 看个人擅长哪种解析方式来导入对应的工具包</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>安装命令在之前的”爬虫技术栈”有讲过，就不赘述了。</li></ul><h3 id="3-存储数据"><a href="#3-存储数据" class="headerlink" title="3.存储数据"></a>3.存储数据</h3><ul><li>程序获取回来的数据总不能以文本输出在运行窗口结束，我们通过正则表达式或者BeautifulSoup的解析工具将数据进一步筛选。</li><li>筛选完成之后，如果是文本数据可以利用xlwt存在excel表格中，也可以存进数据库中。当然以 “.docx”、”.txt”文件形式存储也可以。</li><li>存储的文件格式不同，所用到的内置库也不同。如果是图片或者视频文件直接以视频或者图片格式保存就好。下面是爬取图片案例<pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">import</span> requests<span class="token keyword">import</span> json<span class="token keyword">for</span> i <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">11</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    URL <span class="token operator">=</span> <span class="token string">'https://api.ixiaowai.cn/api/api.php?return=json'</span>    response <span class="token operator">=</span> requests<span class="token punctuation">.</span>get<span class="token punctuation">(</span>URL<span class="token punctuation">)</span>    <span class="token keyword">if</span> response<span class="token punctuation">.</span>status_code <span class="token operator">==</span> <span class="token number">200</span><span class="token punctuation">:</span>        response<span class="token punctuation">.</span>encoding <span class="token operator">=</span> <span class="token string">'utf-8-sig'</span>        data <span class="token operator">=</span> json<span class="token punctuation">.</span>loads<span class="token punctuation">(</span>response<span class="token punctuation">.</span>text<span class="token punctuation">)</span>        response2 <span class="token operator">=</span> requests<span class="token punctuation">.</span>get<span class="token punctuation">(</span>url<span class="token operator">=</span>data<span class="token punctuation">[</span><span class="token string">'imgurl'</span><span class="token punctuation">]</span><span class="token punctuation">)</span>        <span class="token builtin">file</span> <span class="token operator">=</span> <span class="token builtin">open</span><span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f'./images/</span><span class="token interpolation"><span class="token punctuation">{</span>i<span class="token punctuation">}</span></span><span class="token string">.jpg'</span></span><span class="token punctuation">,</span><span class="token string">'wb'</span><span class="token punctuation">)</span>        <span class="token builtin">file</span><span class="token punctuation">.</span>write<span class="token punctuation">(</span>response2<span class="token punctuation">.</span>content<span class="token punctuation">)</span>        <span class="token builtin">file</span><span class="token punctuation">.</span>close<span class="token punctuation">(</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li></ul><h3 id="4-数据分析"><a href="#4-数据分析" class="headerlink" title="4.数据分析"></a>4.数据分析</h3><ol><li>数据分析的定义</li></ol><ul><li>数据分析就是从大量看似没有任何逻辑和规律的数据中提取有价值的信息</li></ul><ol start="2"><li>数据分析师的技能栈</li></ol><ul><li>①.计算机科学相关知识：编程、数据库、网络</li><li>②.数据思维和统计思维</li><li>③.业务理解能力</li><li>④.机器学习算法(神经网络算法、卷积神经网络)</li></ul><ol start="3"><li>数据分析流程</li></ol><ul><li>①.业务理解，确定要解决的问题</li><li>②.收集数据(数据库  爬虫  三方接口)</li><li>③.数据清洗(无效值、空值、缺失值、映射、转化、归一化)</li><li>④.探索数据(分组、聚合、各种运算、可视化)</li><li>⑤.使用模型和模型调优</li><li>⑥.部署模型，AB测试，给业务提供建议，使用数据驱动决策</li></ul><ol start="4"><li>Pyhton数据分析三大神器：</li></ol><ul><li>①.Numpy：ndarray-数据的存储和运算</li><li>②.Pandas：Series、DataFrame-数据处理</li><li>③.Mathlotlib：数据建模</li><li>④.Pyecharts：可视化统计表</li></ul>]]></content>
      
      
      <categories>
          
          <category> Python </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Python </tag>
            
            <tag> 大数据 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>JavaScript中输出语句的高级用法</title>
      <link href="/2021/12/22/js-zhong-shu-chu-yu-ju-de-gao-ji-yong-fa/"/>
      <url>/2021/12/22/js-zhong-shu-chu-yu-ju-de-gao-ji-yong-fa/</url>
      
        <content type="html"><![CDATA[<h3 id="Log-函数"><a href="#Log-函数" class="headerlink" title="Log()函数"></a>Log()函数</h3><p>log函数是Javascript中console对象的一个方法，常用功能是在开发者工具输出想要的数据，运用得好可以向访客说明自己的网站信息。</p><pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript">console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>刚开始我以为这个函数除了输出信息就没其他作用了，但其实这个log函数有两个参数，第一个参数<br>是要输出的数据，第二个是修饰数据的样式语句。这么说可能比较抽象。👆案例！</p><pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript">console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">'这是一个文本内容&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;'</span><span class="token punctuation">)</span>   <span class="token comment">//正常输出</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="./note_images/normal.jpg"></p><pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript"><span class="token keyword">var</span> str <span class="token operator">=</span> <span class="token string">'这是一个文本内容&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;'</span><span class="token punctuation">;</span>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">%c</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>str<span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">`</span></span><span class="token punctuation">,</span><span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">font-size:80px;color:red;font-weight:blod</span><span class="token template-punctuation string">`</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment">//不要忘了加 '%c '</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p><img src="./note_images/style.jpg"></p><h3 id="有趣案例"><a href="#有趣案例" class="headerlink" title="有趣案例"></a>有趣案例</h3><pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript"><span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> <span class="token number">10000</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">i</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>            <span class="token function">setTimeout</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>                console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">%c </span><span class="token template-punctuation string">`</span></span><span class="token punctuation">,</span> <span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">font-size: 150px;                       padding-left: 1000px;                    background-image: url(https://img.17getfun.com/d74fdbb45d64498d9aa97b08cf4a2cb520151220130909.gif);                    background-size: 60px;                    background-repeat: no-repeat;                    background-position: </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>i <span class="token operator">/</span> <span class="token number">5</span><span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">% </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span><span class="token number">50</span> <span class="token operator">+</span> Math<span class="token punctuation">.</span><span class="token function">sin</span><span class="token punctuation">(</span>i <span class="token operator">/</span> <span class="token number">4</span><span class="token punctuation">)</span> <span class="token operator">*</span> <span class="token number">50</span><span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">%;</span><span class="token template-punctuation string">`</span></span>                <span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token punctuation">}</span><span class="token punctuation">,</span> i <span class="token operator">*</span> <span class="token number">100</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>俺不会做动态图…..展示不了了，感兴趣的可以复制代码直接跑一遍看效果。</p><h3 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h3><p>最后，做个总结吧：log()函数的第二个参数可以改变输出数据的样式，我们可以在第二个参数里面写一串表达式或者样式语句达到修改输出内容的外观。具体有什么样的功能还是需要发挥自己的小脑瓜和想象力。例如B站首页的一个log()应用实例就很好玩。<br>👆图片！<img src="./note_images/example.jpg"><br>log的用法远不止这些，等以后学到新的有趣用法，再更这篇文章。</p><h3 id="待加更"><a href="#待加更" class="headerlink" title="待加更"></a>待加更</h3>]]></content>
      
      
      <categories>
          
          <category> JavaScript </category>
          
      </categories>
      
      
        <tags>
            
            <tag> JavaScript </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>JavaScript遍历小结</title>
      <link href="/2021/12/21/javascript-bian-li-xiao-jie/"/>
      <url>/2021/12/21/javascript-bian-li-xiao-jie/</url>
      
        <content type="html"><![CDATA[<h3 id="1-For-…in…"><a href="#1-For-…in…" class="headerlink" title="1.For(…in…){}"></a>1.For(…in…){}</h3><pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript"><span class="token keyword">const</span> arr <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token keyword">const</span> person <span class="token operator">=</span> <span class="token punctuation">{</span>    name<span class="token operator">:</span><span class="token string">'qinhaozhao'</span><span class="token punctuation">,</span>    age<span class="token operator">:</span><span class="token number">18</span><span class="token punctuation">,</span>    gender<span class="token operator">:</span><span class="token string">'男'</span><span class="token punctuation">,</span><span class="token punctuation">}</span><span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">let</span> index <span class="token keyword">in</span> arr<span class="token punctuation">)</span><span class="token punctuation">{</span>    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>index<span class="token punctuation">)</span><span class="token punctuation">}</span><span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">let</span> index <span class="token keyword">in</span> person<span class="token punctuation">)</span><span class="token punctuation">{</span>    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>index<span class="token punctuation">)</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><blockquote><p>可以看到，对于数组最后输出的是数据的索引号；而对于对象，最后输出的是属性名称，即key.</p></blockquote><hr><h3 id="2-For-…of…"><a href="#2-For-…of…" class="headerlink" title="2.For(…of…){}"></a>2.For(…of…){}</h3><blockquote><p>同样利用上面两个数据进行遍历</p></blockquote><pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript"><span class="token keyword">const</span> arr <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token keyword">const</span> person <span class="token operator">=</span> <span class="token punctuation">{</span>    name<span class="token operator">:</span><span class="token string">'qinhaozhao'</span><span class="token punctuation">,</span>    age<span class="token operator">:</span><span class="token number">18</span><span class="token punctuation">,</span>    gender<span class="token operator">:</span><span class="token string">'男'</span><span class="token punctuation">,</span><span class="token punctuation">}</span><span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">let</span> value <span class="token keyword">of</span> arr<span class="token punctuation">)</span><span class="token punctuation">{</span>    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>value<span class="token punctuation">)</span>    <span class="token comment">//输出数组的值</span><span class="token punctuation">}</span><span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">let</span> value <span class="token keyword">of</span> person<span class="token punctuation">)</span><span class="token punctuation">{</span>    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>value<span class="token punctuation">)</span>  <span class="token comment">//程序报错</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><blockquote><p>总结：for in 的作用是遍历可迭代对象(数组、Set、Map),而for of没有这个功能.</p></blockquote><hr><h3 id="3-each"><a href="#3-each" class="headerlink" title="3.$.each()"></a>3.$.each()</h3><blockquote><p>$.each函数是jQuery中的一种遍历函数，它可以遍历任何数据类型的数据</p></blockquote><ul><li><strong>遍历数组</strong><pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript">$<span class="token punctuation">.</span><span class="token function">each</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token punctuation">{</span><span class="token string">"name"</span><span class="token operator">:</span><span class="token string">"limeng"</span><span class="token punctuation">,</span><span class="token string">"email"</span><span class="token operator">:</span><span class="token string">"xfjylimeng"</span><span class="token punctuation">}</span><span class="token punctuation">,</span><span class="token punctuation">{</span><span class="token string">"name"</span><span class="token operator">:</span><span class="token string">"hehe"</span><span class="token punctuation">,</span><span class="token string">"email"</span><span class="token operator">:</span><span class="token string">"xfjylimeng"</span><span class="token punctuation">}</span><span class="token punctuation">,</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">i<span class="token punctuation">,</span>n</span><span class="token punctuation">)</span><span class="token punctuation">{</span>   console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">"索引:"</span><span class="token operator">+</span>i<span class="token punctuation">,</span><span class="token string">"对应值为："</span><span class="token operator">+</span>n<span class="token punctuation">.</span>name<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">var</span> arr1 <span class="token operator">=</span> <span class="token punctuation">[</span> <span class="token string">"one"</span><span class="token punctuation">,</span> <span class="token string">"two"</span><span class="token punctuation">,</span> <span class="token string">"three"</span><span class="token punctuation">,</span> <span class="token string">"four"</span><span class="token punctuation">,</span> <span class="token string">"five"</span> <span class="token punctuation">]</span><span class="token punctuation">;</span>$<span class="token punctuation">.</span><span class="token function">each</span><span class="token punctuation">(</span>arr1<span class="token punctuation">,</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">// 输出：one   two  three  four   five</span><span class="token comment">//遍历二维数组</span><span class="token keyword">var</span> arr2 <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token number">4</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">,</span> <span class="token number">6</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token number">7</span><span class="token punctuation">,</span> <span class="token number">8</span><span class="token punctuation">,</span> <span class="token number">9</span><span class="token punctuation">]</span><span class="token punctuation">]</span>$<span class="token punctuation">.</span><span class="token function">each</span><span class="token punctuation">(</span>arr2<span class="token punctuation">,</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">i<span class="token punctuation">,</span> item</span><span class="token punctuation">)</span><span class="token punctuation">{</span>    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>item<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">// 输出：1   4   7</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><blockquote><p>参数i为遍历索引值，n为当前的遍历对象</p></blockquote></li><li><strong>遍历对象</strong><pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript"><span class="token keyword">var</span> obj <span class="token operator">=</span> <span class="token punctuation">{</span> one<span class="token operator">:</span><span class="token number">1</span><span class="token punctuation">,</span> two<span class="token operator">:</span><span class="token number">2</span><span class="token punctuation">,</span> three<span class="token operator">:</span><span class="token number">3</span><span class="token punctuation">,</span> four<span class="token operator">:</span><span class="token number">4</span><span class="token punctuation">,</span> five<span class="token operator">:</span><span class="token number">5</span> <span class="token punctuation">}</span><span class="token punctuation">;</span>$<span class="token punctuation">.</span><span class="token function">each</span><span class="token punctuation">(</span>obj<span class="token punctuation">,</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">key<span class="token punctuation">,</span> val</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>obj<span class="token punctuation">[</span>key<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">// 输出：1   2  3  4  5</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre></li></ul><hr><h3 id="4-each"><a href="#4-each" class="headerlink" title="4.$().each"></a>4.$().each</h3><ul><li><strong>遍历DOM元素</strong><blockquote><p>例如，当页面有多个input标签类型为checkbox，对于这时用$().each来处理多个checkbook</p></blockquote><pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript"><span class="token function">$</span><span class="token punctuation">(</span><span class="token string">"input[name='ch']"</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">each</span><span class="token punctuation">(</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">i</span><span class="token punctuation">)</span><span class="token punctuation">{</span>    <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token function">$</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">attr</span><span class="token punctuation">(</span>‘checked’<span class="token punctuation">)</span><span class="token operator">==</span><span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">{</span>    <span class="token comment">//一些操作代码</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><blockquote><p>回调函数是可以传递参数，i就为遍历的索引</p></blockquote></li></ul>]]></content>
      
      
      <categories>
          
          <category> JavaScript </category>
          
      </categories>
      
      
        <tags>
            
            <tag> JavaScript </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>爬虫常用技术栈</title>
      <link href="/2021/12/21/pa-chong-ji-zhu-zhan/"/>
      <url>/2021/12/21/pa-chong-ji-zhu-zhan/</url>
      
        <content type="html"><![CDATA[<h3 id="1-爬虫工具准备"><a href="#1-爬虫工具准备" class="headerlink" title="1.爬虫工具准备"></a>1.爬虫工具准备</h3><ul><li>1).Request内置库<ul><li>使用python的包管理工具pip进行安装<pre class="line-numbers language-cmd" data-language="cmd"><code class="language-cmd">pip install Request<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li><li>导入request<pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">import</span> requestsresponse <span class="token operator">=</span> requests<span class="token punctuation">.</span>get<span class="token punctuation">(</span><span class="token string">"目标网址url"</span><span class="token punctuation">,</span><span class="token string">"请求头部"</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre></li></ul></li><li>2).BeautifulSoup解析页面工具<ul><li>安装扩展<pre class="line-numbers language-cmd" data-language="cmd"><code class="language-cmd">pip install BeautifulSoup4<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li></ul></li><li>3).Selenium内置库  <pre class="line-numbers language-cmd" data-language="cmd"><code class="language-cmd">pip install Selenium <span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>使用Selenium的优点是可以模仿浏览器进行用户登录(有些网站需要用户注册登录之后才能浏览数据)或者人机验证。<br>但前提是你在程序文件中有浏览器驱动程序chromedriver.exe(谷歌浏览器驱动程序)，不同浏览器驱动程序不同。<h3 id="2-Request-bs4-实现数据爬取案例-成都链家二手房"><a href="#2-Request-bs4-实现数据爬取案例-成都链家二手房" class="headerlink" title="2.Request + bs4 实现数据爬取案例(成都链家二手房)"></a>2.Request + bs4 实现数据爬取案例(成都链家二手房)</h3></li></ul><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token comment">#-*- codeing = utf-8 #-*-</span><span class="token comment">#@Time : 2021/10/15 20:14</span><span class="token comment">#@Author : qhz</span><span class="token comment">#@File : lianjia_spider.py</span><span class="token comment">#@Sofyware : PyCharm</span><span class="token keyword">import</span> requests<span class="token keyword">from</span> bs4 <span class="token keyword">import</span> BeautifulSoup<span class="token keyword">import</span> xlwtarea <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>house_name <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>flood <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>address <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>followInfo <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>priceInfo <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>data <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token keyword">def</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    header <span class="token operator">=</span> <span class="token punctuation">{</span>        <span class="token string">"User-Agent"</span><span class="token punctuation">:</span> <span class="token string">"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/91.0.4472.114 Safari/537.36 Edg/91.0.864.59"</span>    <span class="token punctuation">}</span>    path <span class="token operator">=</span> <span class="token string">".\\成都二手房信息.xls"</span>    <span class="token keyword">for</span> i <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">101</span><span class="token punctuation">)</span><span class="token punctuation">:</span>        URL <span class="token operator">=</span> <span class="token string-interpolation"><span class="token string">f'https://cd.lianjia.com/ershoufang/pg</span><span class="token interpolation"><span class="token punctuation">{</span>i<span class="token punctuation">}</span></span><span class="token string">'</span></span>        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">'第'</span><span class="token punctuation">,</span>i<span class="token punctuation">,</span><span class="token string">'页：'</span><span class="token punctuation">)</span>        data <span class="token operator">=</span> ask_URL<span class="token punctuation">(</span>URL<span class="token punctuation">,</span>header<span class="token punctuation">)</span>    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">'爬取完成'</span><span class="token punctuation">)</span>    save_Data<span class="token punctuation">(</span>data<span class="token punctuation">,</span>path<span class="token punctuation">)</span>    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">'存储成功'</span><span class="token punctuation">)</span><span class="token keyword">def</span> <span class="token function">save_Data</span><span class="token punctuation">(</span>data<span class="token punctuation">,</span>datapath<span class="token punctuation">)</span><span class="token punctuation">:</span>    book <span class="token operator">=</span> xlwt<span class="token punctuation">.</span>Workbook<span class="token punctuation">(</span>encoding<span class="token operator">=</span><span class="token string">'utf-8'</span><span class="token punctuation">,</span> style_compression<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">)</span>    sheet <span class="token operator">=</span> book<span class="token punctuation">.</span>add_sheet<span class="token punctuation">(</span><span class="token string">'成都二手房信息'</span><span class="token punctuation">,</span> cell_overwrite_ok<span class="token operator">=</span><span class="token boolean">True</span><span class="token punctuation">)</span>    col <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token string">'房屋名字'</span><span class="token punctuation">,</span> <span class="token string">'房屋地址'</span><span class="token punctuation">,</span> <span class="token string">'房屋信息'</span><span class="token punctuation">,</span> <span class="token string">'房屋评价'</span><span class="token punctuation">,</span><span class="token string">'房屋价格'</span><span class="token punctuation">)</span>    <span class="token keyword">for</span> i <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">)</span><span class="token punctuation">:</span>        sheet<span class="token punctuation">.</span>write<span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> i<span class="token punctuation">,</span> col<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">)</span>    <span class="token keyword">for</span> k <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token builtin">len</span><span class="token punctuation">(</span>data<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">:</span>        <span class="token keyword">for</span> i <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token builtin">len</span><span class="token punctuation">(</span>data<span class="token punctuation">[</span>k<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">:</span>            <span class="token keyword">for</span> j <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">5</span><span class="token punctuation">)</span><span class="token punctuation">:</span>                sheet<span class="token punctuation">.</span>write<span class="token punctuation">(</span>i<span class="token punctuation">,</span>j<span class="token punctuation">,</span>data<span class="token punctuation">[</span>j<span class="token punctuation">]</span><span class="token punctuation">[</span>i<span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span>    book<span class="token punctuation">.</span>save<span class="token punctuation">(</span>datapath<span class="token punctuation">)</span><span class="token comment">#将返回的数据存储到本地</span><span class="token keyword">def</span> <span class="token function">ask_URL</span><span class="token punctuation">(</span>baseurl<span class="token punctuation">,</span>head<span class="token punctuation">)</span><span class="token punctuation">:</span>    response <span class="token operator">=</span> requests<span class="token punctuation">.</span>get<span class="token punctuation">(</span>url<span class="token operator">=</span>baseurl<span class="token punctuation">,</span>headers<span class="token operator">=</span>head<span class="token punctuation">)</span>    <span class="token keyword">if</span> response<span class="token punctuation">.</span>status_code <span class="token operator">==</span> <span class="token number">200</span><span class="token punctuation">:</span>        soup <span class="token operator">=</span> BeautifulSoup<span class="token punctuation">(</span>response<span class="token punctuation">.</span>text<span class="token punctuation">,</span><span class="token string">'lxml'</span><span class="token punctuation">)</span>        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token builtin">type</span><span class="token punctuation">(</span>soup<span class="token punctuation">)</span><span class="token punctuation">)</span>        area_list <span class="token operator">=</span> soup<span class="token punctuation">.</span>select<span class="token punctuation">(</span><span class="token string">'body &gt; div:nth-child(12) &gt; div &gt; div.position &gt; dl:nth-child(2) &gt; dd &gt; div:nth-child(1) &gt; div &gt; a'</span><span class="token punctuation">)</span>        <span class="token keyword">for</span> j <span class="token keyword">in</span> area_list<span class="token punctuation">:</span>            area<span class="token punctuation">.</span>append<span class="token punctuation">(</span>j<span class="token punctuation">.</span>text<span class="token punctuation">)</span>        title <span class="token operator">=</span> soup<span class="token punctuation">.</span>select<span class="token punctuation">(</span><span class="token string">'body&gt;#content&gt;.leftContent&gt;.sellListContent&gt;.LOGCLICKDATA&gt;.info'</span><span class="token punctuation">)</span>        <span class="token keyword">for</span> i <span class="token keyword">in</span> title<span class="token punctuation">:</span>            <span class="token keyword">if</span> i<span class="token punctuation">.</span>select_one<span class="token punctuation">(</span><span class="token string">'.title&gt;span'</span><span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token boolean">None</span><span class="token punctuation">:</span>                house_name<span class="token punctuation">.</span>append<span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f"</span><span class="token interpolation"><span class="token punctuation">{</span>i<span class="token punctuation">.</span>select_one<span class="token punctuation">(</span><span class="token string">'.title'</span><span class="token punctuation">)</span><span class="token punctuation">.</span>text<span class="token punctuation">}</span></span><span class="token string">"</span></span><span class="token punctuation">)</span>  <span class="token comment">#有些房子没有红色类型标签</span>            <span class="token keyword">else</span><span class="token punctuation">:</span>                house_name<span class="token punctuation">.</span>append<span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f"</span><span class="token interpolation"><span class="token punctuation">{</span>i<span class="token punctuation">.</span>select_one<span class="token punctuation">(</span><span class="token string">'.title&gt;a'</span><span class="token punctuation">)</span><span class="token punctuation">.</span>text<span class="token punctuation">}</span></span><span class="token string"> ----&gt;&gt;标签： </span><span class="token interpolation"><span class="token punctuation">{</span>i<span class="token punctuation">.</span>select_one<span class="token punctuation">(</span><span class="token string">'.title&gt;span'</span><span class="token punctuation">)</span><span class="token punctuation">.</span>text<span class="token punctuation">}</span></span><span class="token string">"</span></span><span class="token punctuation">)</span>            flood<span class="token punctuation">.</span>append<span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f"</span><span class="token interpolation"><span class="token punctuation">{</span>i<span class="token punctuation">.</span>select_one<span class="token punctuation">(</span><span class="token string">'.flood&gt;.positionInfo&gt;a:nth-child(2)'</span><span class="token punctuation">)</span><span class="token punctuation">.</span>text<span class="token punctuation">.</span>replace<span class="token punctuation">(</span><span class="token string">' '</span><span class="token punctuation">,</span><span class="token string">''</span><span class="token punctuation">)</span><span class="token punctuation">}</span></span><span class="token string">-</span><span class="token interpolation"><span class="token punctuation">{</span>i<span class="token punctuation">.</span>select_one<span class="token punctuation">(</span><span class="token string">'.flood&gt;.positionInfo&gt;a:nth-child(3)'</span><span class="token punctuation">)</span><span class="token punctuation">.</span>text<span class="token punctuation">}</span></span><span class="token string">"</span></span><span class="token punctuation">)</span>                    address<span class="token punctuation">.</span>append<span class="token punctuation">(</span>i<span class="token punctuation">.</span>select_one<span class="token punctuation">(</span><span class="token string">'.address&gt;.houseInfo'</span><span class="token punctuation">)</span><span class="token punctuation">.</span>text<span class="token punctuation">)</span>                    followInfo<span class="token punctuation">.</span>append<span class="token punctuation">(</span>i<span class="token punctuation">.</span>select_one<span class="token punctuation">(</span><span class="token string">'.followInfo'</span><span class="token punctuation">)</span><span class="token punctuation">.</span>text<span class="token punctuation">)</span>            <span class="token keyword">if</span> i<span class="token punctuation">.</span>select_one<span class="token punctuation">(</span><span class="token string">'.priceInfo&gt;.totalPrice&gt;span:nth-child(2)'</span><span class="token punctuation">)</span><span class="token punctuation">.</span>text <span class="token operator">!=</span> <span class="token string">''</span><span class="token punctuation">:</span>                priceInfo<span class="token punctuation">.</span>append<span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f"</span><span class="token interpolation"><span class="token punctuation">{</span>i<span class="token punctuation">.</span>select_one<span class="token punctuation">(</span><span class="token string">'.priceInfo&gt;.totalPrice&gt;span:nth-child(2)'</span><span class="token punctuation">)</span><span class="token punctuation">.</span>text<span class="token punctuation">}</span></span><span class="token string">万  </span><span class="token interpolation"><span class="token punctuation">{</span>i<span class="token punctuation">.</span>select_one<span class="token punctuation">(</span><span class="token string">'.priceInfo&gt;.unitPrice&gt;span'</span><span class="token punctuation">)</span><span class="token punctuation">.</span>text<span class="token punctuation">}</span></span><span class="token string">"</span></span><span class="token punctuation">)</span>            <span class="token keyword">else</span><span class="token punctuation">:</span>                priceInfo<span class="token punctuation">.</span>append<span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f"</span><span class="token interpolation"><span class="token punctuation">{</span>i<span class="token punctuation">.</span>select_one<span class="token punctuation">(</span><span class="token string">'.priceInfo&gt;.unitPrice&gt;span'</span><span class="token punctuation">)</span><span class="token punctuation">.</span>text<span class="token punctuation">}</span></span><span class="token string">"</span></span><span class="token punctuation">)</span>                data <span class="token operator">=</span> <span class="token punctuation">[</span>house_name<span class="token punctuation">,</span>flood<span class="token punctuation">,</span>address<span class="token punctuation">,</span>followInfo<span class="token punctuation">,</span>priceInfo<span class="token punctuation">]</span>        <span class="token keyword">return</span> data    <span class="token keyword">else</span><span class="token punctuation">:</span>        <span class="token keyword">print</span><span class="token punctuation">(</span>response<span class="token punctuation">.</span>status_code<span class="token punctuation">)</span>        <span class="token keyword">return</span> <span class="token number">0</span><span class="token keyword">if</span> __name__ <span class="token operator">==</span> <span class="token string">'__main__'</span><span class="token punctuation">:</span>    main<span class="token punctuation">(</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="3-Selenium实战"><a href="#3-Selenium实战" class="headerlink" title="3.Selenium实战"></a>3.Selenium实战</h3><ul><li>selenium”爬取成都链家二手房信息”实战代码：<pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token comment">#-*- codeing = utf-8 #-*-</span><span class="token comment">#@Time : 2021/10/18 17:10</span><span class="token comment">#@Author : qhz</span><span class="token comment">#@File : lianjia_spider_byselenium.py</span><span class="token comment">#@Sofyware : PyCharm</span><span class="token keyword">from</span> selenium <span class="token keyword">import</span> webdriver<span class="token keyword">import</span> xlwt<span class="token keyword">from</span> selenium<span class="token punctuation">.</span>webdriver<span class="token punctuation">.</span>common<span class="token punctuation">.</span>by <span class="token keyword">import</span> Byarea <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>house_name <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>flood <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>address <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>followInfo <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>priceInfo <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>area_list <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>option <span class="token operator">=</span> webdriver<span class="token punctuation">.</span>ChromeOptions<span class="token punctuation">(</span><span class="token punctuation">)</span>option<span class="token punctuation">.</span>add_argument<span class="token punctuation">(</span><span class="token string">'blink-settings=imagesEnabled=false'</span><span class="token punctuation">)</span><span class="token comment">#option.add_argument('--headless')  #不打开浏览器</span><span class="token comment">#创建浏览器对象</span>browser <span class="token operator">=</span> webdriver<span class="token punctuation">.</span>Chrome<span class="token punctuation">(</span><span class="token string">'../chromedriver.exe'</span><span class="token punctuation">,</span>options<span class="token operator">=</span>option<span class="token punctuation">)</span>browser<span class="token punctuation">.</span>maximize_window<span class="token punctuation">(</span><span class="token punctuation">)</span>browser<span class="token punctuation">.</span>execute_cdp_cmd<span class="token punctuation">(</span>    <span class="token string">"Page.addScriptToEvaluateOnNewDocument"</span><span class="token punctuation">,</span>    <span class="token punctuation">{</span>    <span class="token string">"source"</span><span class="token punctuation">:</span> <span class="token string">"Object.defineProperty(navigator, 'webdriver', {get: () =&gt;undefined})"</span>    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token comment">#datapath = ".\\链家成都二手房信息(附地区).xls"</span><span class="token keyword">def</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    URL <span class="token operator">=</span> <span class="token string">'https://cd.lianjia.com/ershoufang/'</span>    ask_URL<span class="token punctuation">(</span>URL<span class="token punctuation">)</span>    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">'爬取结束'</span><span class="token punctuation">)</span><span class="token keyword">def</span> <span class="token function">ask_URL</span><span class="token punctuation">(</span>baseurl<span class="token punctuation">)</span><span class="token punctuation">:</span>    browser<span class="token punctuation">.</span>get<span class="token punctuation">(</span>baseurl<span class="token punctuation">)</span>    area_list <span class="token operator">=</span> browser<span class="token punctuation">.</span>find_elements<span class="token punctuation">(</span>By<span class="token punctuation">.</span>CSS_SELECTOR<span class="token punctuation">,</span><span class="token string">'body &gt; div:nth-child(12) &gt; div &gt; div.position &gt; dl:nth-child(2) &gt; dd &gt; div:nth-child(1) &gt; div &gt; a'</span><span class="token punctuation">)</span>    <span class="token keyword">for</span> z <span class="token keyword">in</span> area_list<span class="token punctuation">:</span>        area<span class="token punctuation">.</span>append<span class="token punctuation">(</span>z<span class="token punctuation">.</span>text<span class="token punctuation">)</span>    <span class="token keyword">for</span> y <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token builtin">len</span><span class="token punctuation">(</span>area_list<span class="token punctuation">)</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">:</span>  <span class="token comment">#此处循环用来转换地区</span>        area_list<span class="token punctuation">[</span>y<span class="token punctuation">]</span><span class="token punctuation">.</span>click<span class="token punctuation">(</span><span class="token punctuation">)</span>        baseurl <span class="token operator">=</span> browser<span class="token punctuation">.</span>current_url        datapath <span class="token operator">=</span> <span class="token string-interpolation"><span class="token string">f'.\\链家成都</span><span class="token interpolation"><span class="token punctuation">{</span>area<span class="token punctuation">[</span>y<span class="token punctuation">]</span><span class="token punctuation">}</span></span><span class="token string">二手房信息.xls'</span></span>        house_name<span class="token punctuation">.</span>clear<span class="token punctuation">(</span><span class="token punctuation">)</span>        flood<span class="token punctuation">.</span>clear<span class="token punctuation">(</span><span class="token punctuation">)</span>        address<span class="token punctuation">.</span>clear<span class="token punctuation">(</span><span class="token punctuation">)</span>        followInfo<span class="token punctuation">.</span>clear<span class="token punctuation">(</span><span class="token punctuation">)</span>        priceInfo <span class="token punctuation">.</span>clear<span class="token punctuation">(</span><span class="token punctuation">)</span>        page <span class="token operator">=</span> <span class="token builtin">eval</span><span class="token punctuation">(</span>browser<span class="token punctuation">.</span>find_element<span class="token punctuation">(</span>By<span class="token punctuation">.</span>CSS_SELECTOR<span class="token punctuation">,</span><span class="token string">'#content &gt; div.leftContent &gt; div.contentBottom.clear &gt; div.page-box.fr &gt; div'</span><span class="token punctuation">)</span><span class="token punctuation">.</span>get_attribute<span class="token punctuation">(</span><span class="token string">'page-data'</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token string">'totalPage'</span><span class="token punctuation">]</span>        <span class="token comment">#eval() 将str转换为字典</span>        <span class="token keyword">for</span> x <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span>page<span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">:</span>            baseurl <span class="token operator">+=</span> <span class="token string-interpolation"><span class="token string">f'pg</span><span class="token interpolation"><span class="token punctuation">{</span>x<span class="token punctuation">}</span></span><span class="token string">'</span></span>            browser<span class="token punctuation">.</span>get<span class="token punctuation">(</span>baseurl<span class="token punctuation">)</span>            baseurl <span class="token operator">=</span> baseurl<span class="token punctuation">.</span>replace<span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f'pg</span><span class="token interpolation"><span class="token punctuation">{</span>x<span class="token punctuation">}</span></span><span class="token string">'</span></span><span class="token punctuation">,</span> <span class="token string">''</span><span class="token punctuation">)</span>            title <span class="token operator">=</span> browser<span class="token punctuation">.</span>find_elements<span class="token punctuation">(</span>By<span class="token punctuation">.</span>CSS_SELECTOR<span class="token punctuation">,</span><span class="token string">'body&gt;#content&gt;.leftContent&gt;.sellListContent&gt;.LOGCLICKDATA&gt;.info'</span><span class="token punctuation">)</span>            <span class="token keyword">for</span> i <span class="token keyword">in</span> title<span class="token punctuation">:</span>                house_name<span class="token punctuation">.</span>append<span class="token punctuation">(</span>i<span class="token punctuation">.</span>find_element<span class="token punctuation">(</span>By<span class="token punctuation">.</span>CSS_SELECTOR<span class="token punctuation">,</span><span class="token string">'.title'</span><span class="token punctuation">)</span><span class="token punctuation">.</span>text<span class="token punctuation">.</span>replace<span class="token punctuation">(</span><span class="token string">'\r'</span><span class="token punctuation">,</span><span class="token string">''</span><span class="token punctuation">)</span><span class="token punctuation">.</span>replace<span class="token punctuation">(</span><span class="token string">'\n'</span><span class="token punctuation">,</span><span class="token string">'----&gt;'</span><span class="token punctuation">)</span><span class="token punctuation">)</span>  <span class="token comment"># 有些房子没有红色类型标签</span>                flood<span class="token punctuation">.</span>append<span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f"</span><span class="token interpolation"><span class="token punctuation">{</span>i<span class="token punctuation">.</span>find_element<span class="token punctuation">(</span>By<span class="token punctuation">.</span>CSS_SELECTOR<span class="token punctuation">,</span><span class="token string">'.flood&gt;.positionInfo&gt;a:nth-child(2)'</span><span class="token punctuation">)</span><span class="token punctuation">.</span>text<span class="token punctuation">.</span>replace<span class="token punctuation">(</span><span class="token string">' '</span><span class="token punctuation">,</span> <span class="token string">''</span><span class="token punctuation">)</span><span class="token punctuation">}</span></span><span class="token string">-</span><span class="token interpolation"><span class="token punctuation">{</span>i<span class="token punctuation">.</span>find_element<span class="token punctuation">(</span>By<span class="token punctuation">.</span>CSS_SELECTOR<span class="token punctuation">,</span><span class="token string">'.flood&gt;.positionInfo&gt;a:nth-child(3)'</span><span class="token punctuation">)</span><span class="token punctuation">.</span>text<span class="token punctuation">}</span></span><span class="token string">"</span></span><span class="token punctuation">)</span>                address<span class="token punctuation">.</span>append<span class="token punctuation">(</span>i<span class="token punctuation">.</span>find_element<span class="token punctuation">(</span>By<span class="token punctuation">.</span>CSS_SELECTOR<span class="token punctuation">,</span><span class="token string">'.address&gt;.houseInfo'</span><span class="token punctuation">)</span><span class="token punctuation">.</span>text<span class="token punctuation">)</span>                followInfo<span class="token punctuation">.</span>append<span class="token punctuation">(</span>i<span class="token punctuation">.</span>find_element<span class="token punctuation">(</span>By<span class="token punctuation">.</span>CSS_SELECTOR<span class="token punctuation">,</span><span class="token string">'.followInfo'</span><span class="token punctuation">)</span><span class="token punctuation">.</span>text<span class="token punctuation">)</span>                <span class="token keyword">if</span> i<span class="token punctuation">.</span>find_element<span class="token punctuation">(</span>By<span class="token punctuation">.</span>CSS_SELECTOR<span class="token punctuation">,</span><span class="token string">'.priceInfo&gt;.totalPrice&gt;span:nth-child(2)'</span><span class="token punctuation">)</span><span class="token punctuation">.</span>text <span class="token operator">!=</span> <span class="token string">''</span><span class="token punctuation">:</span>                    priceInfo<span class="token punctuation">.</span>append<span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f"单价：</span><span class="token interpolation"><span class="token punctuation">{</span>i<span class="token punctuation">.</span>find_element<span class="token punctuation">(</span>By<span class="token punctuation">.</span>CSS_SELECTOR<span class="token punctuation">,</span><span class="token string">'.priceInfo&gt;.totalPrice&gt;span:nth-child(2)'</span><span class="token punctuation">)</span><span class="token punctuation">.</span>text<span class="token punctuation">}</span></span><span class="token string">万 | 总价：</span><span class="token interpolation"><span class="token punctuation">{</span>i<span class="token punctuation">.</span>find_element<span class="token punctuation">(</span>By<span class="token punctuation">.</span>CSS_SELECTOR<span class="token punctuation">,</span><span class="token string">'.priceInfo&gt;.unitPrice&gt;span'</span><span class="token punctuation">)</span><span class="token punctuation">.</span>text<span class="token punctuation">}</span></span><span class="token string">"</span></span><span class="token punctuation">)</span>                <span class="token keyword">else</span><span class="token punctuation">:</span>                    priceInfo<span class="token punctuation">.</span>append<span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f"总价：</span><span class="token interpolation"><span class="token punctuation">{</span>i<span class="token punctuation">.</span>find_element<span class="token punctuation">(</span>By<span class="token punctuation">.</span>CSS_SELECTOR<span class="token punctuation">,</span><span class="token string">'.priceInfo&gt;.unitPrice&gt;span'</span><span class="token punctuation">)</span><span class="token punctuation">.</span>text<span class="token punctuation">}</span></span><span class="token string">"</span></span><span class="token punctuation">)</span>            <span class="token comment">#time.sleep(1)  #元素定位结束后，休眠两秒在跳转下一页</span>        area_list <span class="token operator">=</span> browser<span class="token punctuation">.</span>find_elements<span class="token punctuation">(</span>By<span class="token punctuation">.</span>CSS_SELECTOR<span class="token punctuation">,</span><span class="token string">'body &gt; div:nth-child(12) &gt; div &gt; div.position &gt; dl:nth-child(2) &gt; dd &gt; div:nth-child(1) &gt; div &gt; a'</span><span class="token punctuation">)</span>        data <span class="token operator">=</span> <span class="token punctuation">[</span>area<span class="token punctuation">[</span>y<span class="token punctuation">]</span><span class="token punctuation">,</span> house_name<span class="token punctuation">,</span> flood<span class="token punctuation">,</span> followInfo<span class="token punctuation">,</span> address<span class="token punctuation">,</span> priceInfo<span class="token punctuation">]</span>        saveData<span class="token punctuation">(</span>data<span class="token punctuation">,</span>datapath<span class="token punctuation">)</span>        data<span class="token punctuation">.</span>clear<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token comment">#存储数据</span><span class="token keyword">def</span> <span class="token function">saveData</span><span class="token punctuation">(</span>data<span class="token punctuation">,</span>savepath<span class="token punctuation">)</span><span class="token punctuation">:</span>    book <span class="token operator">=</span> xlwt<span class="token punctuation">.</span>Workbook<span class="token punctuation">(</span>encoding<span class="token operator">=</span><span class="token string">'utf-8'</span><span class="token punctuation">,</span> style_compression<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">)</span>    sheet <span class="token operator">=</span> book<span class="token punctuation">.</span>add_sheet<span class="token punctuation">(</span><span class="token string">'二手房信息'</span><span class="token punctuation">,</span> cell_overwrite_ok<span class="token operator">=</span><span class="token boolean">True</span><span class="token punctuation">)</span>    col <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token string">'行政区'</span><span class="token punctuation">,</span><span class="token string">'房屋名字'</span><span class="token punctuation">,</span> <span class="token string">'房屋地址'</span><span class="token punctuation">,</span> <span class="token string">'相关评价'</span><span class="token punctuation">,</span><span class="token string">'房屋信息'</span><span class="token punctuation">,</span> <span class="token string">'房屋价格'</span><span class="token punctuation">)</span>    <span class="token keyword">for</span> i <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">6</span><span class="token punctuation">)</span><span class="token punctuation">:</span>        sheet<span class="token punctuation">.</span>write<span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> i<span class="token punctuation">,</span> col<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">)</span>    <span class="token comment">#写入 行政区</span>    <span class="token keyword">for</span> j <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token builtin">len</span><span class="token punctuation">(</span>data<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">:</span>        sheet<span class="token punctuation">.</span>write<span class="token punctuation">(</span>j<span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">,</span>data<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">)</span>    <span class="token comment">#存储数据 重点算法...</span>    <span class="token keyword">for</span> k <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token builtin">len</span><span class="token punctuation">(</span>data<span class="token punctuation">)</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">:</span>        <span class="token keyword">for</span> i <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token builtin">len</span><span class="token punctuation">(</span>data<span class="token punctuation">[</span>k<span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">:</span>            <span class="token keyword">for</span> j <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">6</span><span class="token punctuation">)</span><span class="token punctuation">:</span>                sheet<span class="token punctuation">.</span>write<span class="token punctuation">(</span>i<span class="token punctuation">,</span> j<span class="token punctuation">,</span> data<span class="token punctuation">[</span>j<span class="token punctuation">]</span><span class="token punctuation">[</span>i <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span>    book<span class="token punctuation">.</span>save<span class="token punctuation">(</span>savepath<span class="token punctuation">)</span><span class="token keyword">def</span> <span class="token function">savedata_by_CSV</span><span class="token punctuation">(</span>data<span class="token punctuation">)</span><span class="token punctuation">:</span>    f <span class="token operator">=</span> <span class="token builtin">open</span><span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f"./成都</span><span class="token interpolation"><span class="token punctuation">{</span>data<span class="token punctuation">}</span></span><span class="token string">二手房信息"</span></span><span class="token punctuation">)</span><span class="token keyword">if</span> __name__ <span class="token operator">==</span> <span class="token string">'__main__'</span><span class="token punctuation">:</span>    main<span class="token punctuation">(</span><span class="token punctuation">)</span> <span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li></ul>]]></content>
      
      
      <categories>
          
          <category> Python </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Python爬虫 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>初识vue框架</title>
      <link href="/2021/12/21/chu-shi-vue-kuang-jia/"/>
      <url>/2021/12/21/chu-shi-vue-kuang-jia/</url>
      
        <content type="html"><![CDATA[<h3 id="1-安装Node-js"><a href="#1-安装Node-js" class="headerlink" title="1.安装Node.js"></a>1.安装Node.js</h3><p>Node.js官网下载：<a href="https://nodejs.org/">https://nodejs.org/</a></p><h3 id="2-npm安装国内镜像源"><a href="#2-npm安装国内镜像源" class="headerlink" title="2.npm安装国内镜像源"></a>2.npm安装国内镜像源</h3><p>npm下载扩展是从国外下载，网速比较慢可能会出现连接超时导致下载失败，因此要安装国内镜像源</p><pre class="line-numbers language-shell" data-language="shell"><code class="language-shell">npm install -g cnpm --registry=https://registry.npm.taobao.org  <span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>注：”-g”：全局安装</p><p>镜像源安装好之后，继续输入：</p><pre class="line-numbers language-shell" data-language="shell"><code class="language-shell">npm install -g vue-cli  cnpm install -g vue-cli  //安装镜像源之后<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><h3 id="3-创建Vue项目"><a href="#3-创建Vue项目" class="headerlink" title="3.创建Vue项目"></a>3.创建Vue项目</h3><p>先创建一个存放项目的文件夹，在cmd中进入到该文件夹的目录下</p><pre class="line-numbers language-shell" data-language="shell"><code class="language-shell">vue create app  //也可以将app替换成你自己想要的项目名<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>选择 Default ([Vue 2] babel,eslint)，按下回车。等待一会之后项目就初始化成功了</p><pre class="line-numbers language-none"><code class="language-none">npm run serve  //启动项目<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><ol><li><p>创建完成之后，先认识Vue项目的文件结构</p><pre class="line-numbers language-md" data-language="md"><code class="language-md">1.1. node_modules文件夹：项目依赖文件夹  1.2. public文件夹：一般放置一些静态资源；放在public中的静态资源，webpack在打包的时候会原封不动的打包到dist文件夹中1.3. src文件夹：源代码文件夹      1).assets文件夹：也是存放静态资源(多个组件共用的静态资源)，webpack打包的时候，里面的静态资源会被当成一个模块，打包到JS文件中      2).components文件夹:放置非路由组件(全局组件)      3).App.vue ：是项目唯一的根组件(全局组件)      4).main.js ：程序的入口文件，整个文件最先执行的文件1.4. babel.config.js文件 ：配置文件，babel相关1.5. package.json文件 ：记录项目的依赖、如何运行1.6. package-lock.json ：缓存性文件1.7. README.md ：说明性文件<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li><li><p>Vue项目的一些配置项</p><pre class="line-numbers language-md" data-language="md"><code class="language-md">2.1. 设置项目运行的时候浏览器自动打开---package.json    "scripts":{        "server": "vue-cli-service serve --open",        "build": "vue-cli-service build",        "lint": "vue-cli-service lint"    },2.2. 关闭eslint校验功能    比如：声明变量但是没有使用，eslint校验工具会报错2.3. src文件夹简写方法，配置别名。@    创建jsconfig.json文件，配置别名@提示    {        "complilerOptions":{            "baseurl":"./",            "path":{                "@/*":["src/*"]            }        },        "exclude":["node_modules","dist"],    }<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li><li><p>Router的理解</p><pre class="line-numbers language-md" data-language="md"><code class="language-md">3.1. 项目路由的分析：vue-router    前端所谓路由：key-value键值对    key：URL(地址栏中的路径)    value：相应的路由组件注意上中下结构    路由组件：Home首页路由组件、search路由组件、login登录路由、register注册路由    非组件路由：header、footer<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li><li><p>定义Router组件</p><pre class="line-numbers language-md" data-language="md"><code class="language-md">4.1. 在项目开发过程中，不再以HTML+CSS为主，主要搞业务、逻辑    具体步骤是：1). 先书写静态页面(HTML+CSS)                2). 拆分组件                3). 获取服务器的数据，动态展示                4). 完成相应的动态业务逻辑注意事项: 1).在创建组件的步骤：组件结构 + 组件的样式 + 图片资源        2).如果想让项目采用less样式，浏览器不识别less样式，需要通过less、less-loader【安装五版本】进行处理less，把less变为css样式        3).如果想让组件识别less样式，还需要在style标签上加"lang=less"4.2. 使用组件的步骤    1).创建或定义组件    2).引入    3).注册    4).使用<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li><li><p>Router的使用</p><pre class="line-numbers language-md" data-language="md"><code class="language-md">5.1. 路由组件的搭建vue-router-components文件夹：放置的非路由组件-pages| views文件夹: 存放路由组件5.2. 路由组件和非路由组件的区别        1).存放的文件夹不同        2).路由组件一般需要在router文件夹中进行注册；非路由组件在使用的时候是以标签的方式使用        3).注册完路由，不管路由组件还是非路由组件身上都有$route、$router属性$route:一般获取路由信息【路径、query、params】$router:一般进行编程式导航进行路由调整【push | replace】5.3. 路由的跳转    1).声明式导航&lt;router-link to=""&gt;&lt;/router-link&gt;,可以进行路由的跳转,需要有“to”属性,也有样式属性class    2).编程式导航push | replace    &lt;router-link class="register"&gt;&lt;/router-link&gt;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li></ol>]]></content>
      
      
      <categories>
          
          <category> Vue </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Vue </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
